// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Fastly/pkg/models/shared"
	"net/http"
)

type GetCacheSettingsRequest struct {
	// Name for the cache settings object.
	CacheSettingsName string `pathParam:"style=simple,explode=false,name=cache_settings_name"`
	// Alphanumeric string identifying the service.
	ServiceID string `pathParam:"style=simple,explode=false,name=service_id"`
	// Integer identifying a service version.
	VersionID int64 `pathParam:"style=simple,explode=false,name=version_id"`
}

func (o *GetCacheSettingsRequest) GetCacheSettingsName() string {
	if o == nil {
		return ""
	}
	return o.CacheSettingsName
}

func (o *GetCacheSettingsRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *GetCacheSettingsRequest) GetVersionID() int64 {
	if o == nil {
		return 0
	}
	return o.VersionID
}

type GetCacheSettingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	CacheSettingResponse *shared.CacheSettingResponse
}

func (o *GetCacheSettingsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetCacheSettingsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetCacheSettingsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetCacheSettingsResponse) GetCacheSettingResponse() *shared.CacheSettingResponse {
	if o == nil {
		return nil
	}
	return o.CacheSettingResponse
}
