// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type DeleteCustomVclRequest struct {
	// Alphanumeric string identifying the service.
	ServiceID string `pathParam:"style=simple,explode=false,name=service_id"`
	// The name of this VCL.
	VclName string `pathParam:"style=simple,explode=false,name=vcl_name"`
	// Integer identifying a service version.
	VersionID int64 `pathParam:"style=simple,explode=false,name=version_id"`
}

func (o *DeleteCustomVclRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *DeleteCustomVclRequest) GetVclName() string {
	if o == nil {
		return ""
	}
	return o.VclName
}

func (o *DeleteCustomVclRequest) GetVersionID() int64 {
	if o == nil {
		return 0
	}
	return o.VersionID
}

// DeleteCustomVcl200ApplicationJSON - OK
type DeleteCustomVcl200ApplicationJSON struct {
	// ok
	Status *string `json:"status,omitempty"`
}

func (o *DeleteCustomVcl200ApplicationJSON) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

type DeleteCustomVclResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	DeleteCustomVcl200ApplicationJSONObject *DeleteCustomVcl200ApplicationJSON
}

func (o *DeleteCustomVclResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteCustomVclResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteCustomVclResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeleteCustomVclResponse) GetDeleteCustomVcl200ApplicationJSONObject() *DeleteCustomVcl200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.DeleteCustomVcl200ApplicationJSONObject
}
