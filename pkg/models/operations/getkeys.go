// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetKeysSecurity struct {
	Token string `security:"scheme,type=apiKey,subtype=header,name=Fastly-Key"`
}

func (o *GetKeysSecurity) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

type GetKeysRequest struct {
	Cursor  *string `queryParam:"style=form,explode=true,name=cursor"`
	Limit   *int64  `queryParam:"style=form,explode=true,name=limit"`
	Prefix  *string `queryParam:"style=form,explode=true,name=prefix"`
	StoreID string  `pathParam:"style=simple,explode=false,name=store_id"`
}

func (o *GetKeysRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *GetKeysRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetKeysRequest) GetPrefix() *string {
	if o == nil {
		return nil
	}
	return o.Prefix
}

func (o *GetKeysRequest) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type GetKeys200ApplicationJSONMeta struct {
	Limit      *int64  `json:"limit,omitempty"`
	NextCursor *string `json:"next_cursor,omitempty"`
}

func (o *GetKeys200ApplicationJSONMeta) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetKeys200ApplicationJSONMeta) GetNextCursor() *string {
	if o == nil {
		return nil
	}
	return o.NextCursor
}

// GetKeys200ApplicationJSON - OK
type GetKeys200ApplicationJSON struct {
	Data []string                       `json:"data,omitempty"`
	Meta *GetKeys200ApplicationJSONMeta `json:"meta,omitempty"`
}

func (o *GetKeys200ApplicationJSON) GetData() []string {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *GetKeys200ApplicationJSON) GetMeta() *GetKeys200ApplicationJSONMeta {
	if o == nil {
		return nil
	}
	return o.Meta
}

type GetKeysResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	GetKeys200ApplicationJSONObject *GetKeys200ApplicationJSON
}

func (o *GetKeysResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetKeysResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetKeysResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetKeysResponse) GetGetKeys200ApplicationJSONObject() *GetKeys200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.GetKeys200ApplicationJSONObject
}
