// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Fastly/pkg/models/shared"
	"net/http"
)

type ListEventsSecurity struct {
	Token string `security:"scheme,type=apiKey,subtype=header,name=Fastly-Key"`
}

type ListEventsRequest struct {
	// Limit the returned events to a specific time frame. Accepts sub-parameters: lt, lte, gt, gte (e.g., filter[created_at][gt]=2022-01-12).
	//
	FilterCreatedAt *string `queryParam:"style=form,explode=true,name=filter[created_at]"`
	// Limit the results returned to a specific customer.
	FilterCustomerID *string `queryParam:"style=form,explode=true,name=filter[customer_id]"`
	// Limit the returned events to a specific `event_type`.
	FilterEventType *string `queryParam:"style=form,explode=true,name=filter[event_type]"`
	// Limit the results returned to a specific service.
	FilterServiceID *string `queryParam:"style=form,explode=true,name=filter[service_id]"`
	// Limit the returned events to a specific token.
	FilterTokenID *string `queryParam:"style=form,explode=true,name=filter[token_id]"`
	// Limit the results returned to a specific user.
	FilterUserID *string `queryParam:"style=form,explode=true,name=filter[user_id]"`
	// Current page.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Number of records per page.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// The order in which to list the results by creation date.
	Sort *shared.Sort `queryParam:"style=form,explode=true,name=sort"`
}

type ListEventsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	EventsResponse *shared.EventsResponse
}
