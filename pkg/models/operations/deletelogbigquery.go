// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type DeleteLogBigquerySecurity struct {
	Token string `security:"scheme,type=apiKey,subtype=header,name=Fastly-Key"`
}

func (o *DeleteLogBigquerySecurity) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

type DeleteLogBigqueryRequest struct {
	// The name for the real-time logging configuration.
	LoggingBigqueryName string `pathParam:"style=simple,explode=false,name=logging_bigquery_name"`
	// Alphanumeric string identifying the service.
	ServiceID string `pathParam:"style=simple,explode=false,name=service_id"`
	// Integer identifying a service version.
	VersionID int64 `pathParam:"style=simple,explode=false,name=version_id"`
}

func (o *DeleteLogBigqueryRequest) GetLoggingBigqueryName() string {
	if o == nil {
		return ""
	}
	return o.LoggingBigqueryName
}

func (o *DeleteLogBigqueryRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *DeleteLogBigqueryRequest) GetVersionID() int64 {
	if o == nil {
		return 0
	}
	return o.VersionID
}

// DeleteLogBigquery200ApplicationJSON - OK
type DeleteLogBigquery200ApplicationJSON struct {
	// ok
	Status *string `json:"status,omitempty"`
}

func (o *DeleteLogBigquery200ApplicationJSON) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

type DeleteLogBigqueryResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	DeleteLogBigquery200ApplicationJSONObject *DeleteLogBigquery200ApplicationJSON
}

func (o *DeleteLogBigqueryResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteLogBigqueryResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteLogBigqueryResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeleteLogBigqueryResponse) GetDeleteLogBigquery200ApplicationJSONObject() *DeleteLogBigquery200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.DeleteLogBigquery200ApplicationJSONObject
}
