// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Fastly/pkg/models/shared"
	"net/http"
)

type CreateHttp3Request struct {
	Http3Input *shared.Http3Input `request:"mediaType=application/x-www-form-urlencoded"`
	// Alphanumeric string identifying the service.
	ServiceID string `pathParam:"style=simple,explode=false,name=service_id"`
	// Integer identifying a service version.
	VersionID int64 `pathParam:"style=simple,explode=false,name=version_id"`
}

func (o *CreateHttp3Request) GetHttp3Input() *shared.Http3Input {
	if o == nil {
		return nil
	}
	return o.Http3Input
}

func (o *CreateHttp3Request) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *CreateHttp3Request) GetVersionID() int64 {
	if o == nil {
		return 0
	}
	return o.VersionID
}

type CreateHttp3Response struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Http3 *shared.Http3
}

func (o *CreateHttp3Response) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateHttp3Response) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateHttp3Response) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateHttp3Response) GetHttp3() *shared.Http3 {
	if o == nil {
		return nil
	}
	return o.Http3
}
