// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomerBillingNetworkType - Customer's current network revenue type.
type CustomerBillingNetworkType string

const (
	CustomerBillingNetworkTypePublic  CustomerBillingNetworkType = "public"
	CustomerBillingNetworkTypePrivate CustomerBillingNetworkType = "private"
)

func (e CustomerBillingNetworkType) ToPointer() *CustomerBillingNetworkType {
	return &e
}

func (e *CustomerBillingNetworkType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "public":
		fallthrough
	case "private":
		*e = CustomerBillingNetworkType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerBillingNetworkType: %v", v)
	}
}

type CustomerInput struct {
	// The alphanumeric string representing the primary billing contact.
	BillingContactID *string `form:"name=billing_contact_id"`
	// Customer's current network revenue type.
	BillingNetworkType *CustomerBillingNetworkType `form:"name=billing_network_type"`
	// Used for adding purchased orders to customer's account.
	BillingRef *string `form:"name=billing_ref"`
	// Specifies whether 2FA is forced or not forced on the customer account. Logs out non-2FA users once 2FA is force enabled.
	Force2fa *bool `form:"name=force_2fa"`
	// Specifies whether SSO is forced or not forced on the customer account.
	ForceSso *bool `form:"name=force_sso"`
	// Specifies whether the account has access or does not have access to the account panel.
	HasAccountPanel *bool `form:"name=has_account_panel"`
	// Specifies whether the account has access or does not have access to the improved events.
	HasImprovedEvents *bool `form:"name=has_improved_events"`
	// Specifies whether the account has enabled or not enabled openstack logging.
	HasOpenstackLogging *bool `form:"name=has_openstack_logging"`
	// Specifies whether the account can edit PCI for a service.
	HasPci *bool `form:"name=has_pci"`
	// The range of IP addresses authorized to access the customer account.
	IPWhitelist *string `form:"name=ip_whitelist"`
	// The alphanumeric string identifying the account's legal contact.
	LegalContactID *string `form:"name=legal_contact_id"`
	// The name of the customer, generally the company name.
	Name *string `form:"name=name"`
	// The alphanumeric string identifying the account owner.
	OwnerID *string `form:"name=owner_id"`
	// The phone number associated with the account.
	PhoneNumber *string `form:"name=phone_number"`
	// The postal address associated with the account.
	PostalAddress *string `form:"name=postal_address"`
	// The pricing plan this customer is under.
	PricingPlan *string `form:"name=pricing_plan"`
	// The alphanumeric string identifying the pricing plan.
	PricingPlanID *string `form:"name=pricing_plan_id"`
	// The alphanumeric string identifying the account's security contact.
	SecurityContactID *string `form:"name=security_contact_id"`
	// The alphanumeric string identifying the account's technical contact.
	TechnicalContactID *string `form:"name=technical_contact_id"`
}
