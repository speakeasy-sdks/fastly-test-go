// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/types"
	"Fastly/pkg/utils"
	"encoding/json"
	"fmt"
)

// WafRuleResponseDataAttributesPublisher - Rule publisher.
type WafRuleResponseDataAttributesPublisher string

const (
	WafRuleResponseDataAttributesPublisherFastly    WafRuleResponseDataAttributesPublisher = "fastly"
	WafRuleResponseDataAttributesPublisherTrustwave WafRuleResponseDataAttributesPublisher = "trustwave"
	WafRuleResponseDataAttributesPublisherOwasp     WafRuleResponseDataAttributesPublisher = "owasp"
)

func (e WafRuleResponseDataAttributesPublisher) ToPointer() *WafRuleResponseDataAttributesPublisher {
	return &e
}

func (e *WafRuleResponseDataAttributesPublisher) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fastly":
		fallthrough
	case "trustwave":
		fallthrough
	case "owasp":
		*e = WafRuleResponseDataAttributesPublisher(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WafRuleResponseDataAttributesPublisher: %v", v)
	}
}

// WafRuleResponseDataAttributesType - The rule's [type](https://docs.fastly.com/en/guides/managing-rules-on-the-fastly-waf#understanding-the-types-of-rules).
type WafRuleResponseDataAttributesType string

const (
	WafRuleResponseDataAttributesTypeStrict    WafRuleResponseDataAttributesType = "strict"
	WafRuleResponseDataAttributesTypeScore     WafRuleResponseDataAttributesType = "score"
	WafRuleResponseDataAttributesTypeThreshold WafRuleResponseDataAttributesType = "threshold"
)

func (e WafRuleResponseDataAttributesType) ToPointer() *WafRuleResponseDataAttributesType {
	return &e
}

func (e *WafRuleResponseDataAttributesType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "strict":
		fallthrough
	case "score":
		fallthrough
	case "threshold":
		*e = WafRuleResponseDataAttributesType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WafRuleResponseDataAttributesType: %v", v)
	}
}

type WafRuleResponseDataAttributes struct {
	// Corresponding ModSecurity rule ID.
	ModsecRuleID *int64 `json:"modsec_rule_id,omitempty"`
	// Rule publisher.
	Publisher *WafRuleResponseDataAttributesPublisher `json:"publisher,omitempty"`
	// The rule's [type](https://docs.fastly.com/en/guides/managing-rules-on-the-fastly-waf#understanding-the-types-of-rules).
	Type *WafRuleResponseDataAttributesType `json:"type,omitempty"`
}

func (o *WafRuleResponseDataAttributes) GetModsecRuleID() *int64 {
	if o == nil {
		return nil
	}
	return o.ModsecRuleID
}

func (o *WafRuleResponseDataAttributes) GetPublisher() *WafRuleResponseDataAttributesPublisher {
	if o == nil {
		return nil
	}
	return o.Publisher
}

func (o *WafRuleResponseDataAttributes) GetType() *WafRuleResponseDataAttributesType {
	if o == nil {
		return nil
	}
	return o.Type
}

type WafRuleResponseData struct {
	Attributes    *WafRuleResponseDataAttributes `json:"attributes,omitempty"`
	ID            *string                        `json:"id,omitempty"`
	Relationships *RelationshipsForWafRule       `json:"relationships,omitempty"`
	// Resource type.
	type_ *string `const:"waf_rule" json:"type"`
}

func (w WafRuleResponseData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WafRuleResponseData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WafRuleResponseData) GetAttributes() *WafRuleResponseDataAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}

func (o *WafRuleResponseData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *WafRuleResponseData) GetRelationships() *RelationshipsForWafRule {
	if o == nil {
		return nil
	}
	return o.Relationships
}

func (o *WafRuleResponseData) GetType() *string {
	return types.String("waf_rule")
}
