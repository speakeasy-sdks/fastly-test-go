// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"encoding/json"
	"fmt"
)

// WafRuleAttributesPublisher - Rule publisher.
type WafRuleAttributesPublisher string

const (
	WafRuleAttributesPublisherFastly    WafRuleAttributesPublisher = "fastly"
	WafRuleAttributesPublisherTrustwave WafRuleAttributesPublisher = "trustwave"
	WafRuleAttributesPublisherOwasp     WafRuleAttributesPublisher = "owasp"
)

func (e WafRuleAttributesPublisher) ToPointer() *WafRuleAttributesPublisher {
	return &e
}

func (e *WafRuleAttributesPublisher) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fastly":
		fallthrough
	case "trustwave":
		fallthrough
	case "owasp":
		*e = WafRuleAttributesPublisher(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WafRuleAttributesPublisher: %v", v)
	}
}

// WafRuleAttributesType - The rule's [type](https://docs.fastly.com/en/guides/managing-rules-on-the-fastly-waf#understanding-the-types-of-rules).
type WafRuleAttributesType string

const (
	WafRuleAttributesTypeStrict    WafRuleAttributesType = "strict"
	WafRuleAttributesTypeScore     WafRuleAttributesType = "score"
	WafRuleAttributesTypeThreshold WafRuleAttributesType = "threshold"
)

func (e WafRuleAttributesType) ToPointer() *WafRuleAttributesType {
	return &e
}

func (e *WafRuleAttributesType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "strict":
		fallthrough
	case "score":
		fallthrough
	case "threshold":
		*e = WafRuleAttributesType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WafRuleAttributesType: %v", v)
	}
}

type WafRuleAttributes struct {
	// Corresponding ModSecurity rule ID.
	ModsecRuleID *int64 `json:"modsec_rule_id,omitempty"`
	// Rule publisher.
	Publisher *WafRuleAttributesPublisher `json:"publisher,omitempty"`
	// The rule's [type](https://docs.fastly.com/en/guides/managing-rules-on-the-fastly-waf#understanding-the-types-of-rules).
	Type *WafRuleAttributesType `json:"type,omitempty"`
}

func (o *WafRuleAttributes) GetModsecRuleID() *int64 {
	if o == nil {
		return nil
	}
	return o.ModsecRuleID
}

func (o *WafRuleAttributes) GetPublisher() *WafRuleAttributesPublisher {
	if o == nil {
		return nil
	}
	return o.Publisher
}

func (o *WafRuleAttributes) GetType() *WafRuleAttributesType {
	if o == nil {
		return nil
	}
	return o.Type
}

type WafRule struct {
	Attributes *WafRuleAttributes `json:"attributes,omitempty"`
	ID         *string            `json:"id,omitempty"`
	// Resource type.
	Type *TypeWafRule `default:"waf_rule" json:"type"`
}

func (w WafRule) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WafRule) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *WafRule) GetAttributes() *WafRuleAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}

func (o *WafRule) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *WafRule) GetType() *TypeWafRule {
	if o == nil {
		return nil
	}
	return o.Type
}
