// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Region - Limit query to a specific geographic region. One of:
//   - `usa` - North America.
//   - `europe` - Europe.
//   - `anzac` - Australia and New Zealand.
//   - `asia` - Asia.
//   - `asia_india` - India.
//   - `asia_southkorea` - South Korea.
//   - `africa_std` - Africa.
//   - `southamerica_std` - South America.
type Region string

const (
	RegionUsa             Region = "usa"
	RegionEurope          Region = "europe"
	RegionAsia            Region = "asia"
	RegionAsiaIndia       Region = "asia_india"
	RegionAsiaSouthkorea  Region = "asia_southkorea"
	RegionAfricaStd       Region = "africa_std"
	RegionSouthamericaStd Region = "southamerica_std"
)

func (e Region) ToPointer() *Region {
	return &e
}

func (e *Region) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "usa":
		fallthrough
	case "europe":
		fallthrough
	case "asia":
		fallthrough
	case "asia_india":
		fallthrough
	case "asia_southkorea":
		fallthrough
	case "africa_std":
		fallthrough
	case "southamerica_std":
		*e = Region(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Region: %v", v)
	}
}
