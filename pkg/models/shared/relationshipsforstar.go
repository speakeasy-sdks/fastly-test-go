// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/types"
	"Fastly/pkg/utils"
)

type RelationshipsForStarUserData struct {
	ID *string `json:"id,omitempty"`
	// Resource type
	type_ *string `const:"user" json:"type"`
}

func (r RelationshipsForStarUserData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RelationshipsForStarUserData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RelationshipsForStarUserData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RelationshipsForStarUserData) GetType() *string {
	return types.String("user")
}

type RelationshipsForStarUser struct {
	Data *RelationshipsForStarUserData `json:"data,omitempty"`
}

func (o *RelationshipsForStarUser) GetData() *RelationshipsForStarUserData {
	if o == nil {
		return nil
	}
	return o.Data
}

type RelationshipsForStar struct {
	Service *RelationshipMemberService `json:"service,omitempty"`
	User    *RelationshipsForStarUser  `json:"user,omitempty"`
}

func (o *RelationshipsForStar) GetService() *RelationshipMemberService {
	if o == nil {
		return nil
	}
	return o.Service
}

func (o *RelationshipsForStar) GetUser() *RelationshipsForStarUser {
	if o == nil {
		return nil
	}
	return o.User
}

type RelationshipsForStarUserDataInput struct {
	// Resource type
	type_ *string `const:"user" json:"type"`
}

func (r RelationshipsForStarUserDataInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RelationshipsForStarUserDataInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RelationshipsForStarUserDataInput) GetType() *string {
	return types.String("user")
}

type RelationshipsForStarUserInput struct {
	Data *RelationshipsForStarUserDataInput `json:"data,omitempty"`
}

func (o *RelationshipsForStarUserInput) GetData() *RelationshipsForStarUserDataInput {
	if o == nil {
		return nil
	}
	return o.Data
}

type RelationshipsForStarInput struct {
	Service *RelationshipMemberServiceInput `json:"service,omitempty"`
	User    *RelationshipsForStarUserInput  `json:"user,omitempty"`
}

func (o *RelationshipsForStarInput) GetService() *RelationshipMemberServiceInput {
	if o == nil {
		return nil
	}
	return o.Service
}

func (o *RelationshipsForStarInput) GetUser() *RelationshipsForStarUserInput {
	if o == nil {
		return nil
	}
	return o.User
}
