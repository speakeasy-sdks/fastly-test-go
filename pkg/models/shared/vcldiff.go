// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VclDiffFormat - The format in which compared VCL changes are being returned in.
type VclDiffFormat string

const (
	VclDiffFormatText       VclDiffFormat = "text"
	VclDiffFormatHTML       VclDiffFormat = "html"
	VclDiffFormatHTMLSimple VclDiffFormat = "html_simple"
)

func (e VclDiffFormat) ToPointer() *VclDiffFormat {
	return &e
}

func (e *VclDiffFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		fallthrough
	case "html":
		fallthrough
	case "html_simple":
		*e = VclDiffFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VclDiffFormat: %v", v)
	}
}

type VclDiff struct {
	// The differences between two specified versions.
	Diff *string `json:"diff,omitempty"`
	// The format in which compared VCL changes are being returned in.
	Format *VclDiffFormat `json:"format,omitempty"`
	// The version number of the service to which changes in the generated VCL are being compared.
	From *int64 `json:"from,omitempty"`
	// The version number of the service from which changes in the generated VCL are being compared.
	To *int64 `json:"to,omitempty"`
}

func (o *VclDiff) GetDiff() *string {
	if o == nil {
		return nil
	}
	return o.Diff
}

func (o *VclDiff) GetFormat() *VclDiffFormat {
	if o == nil {
		return nil
	}
	return o.Format
}

func (o *VclDiff) GetFrom() *int64 {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *VclDiff) GetTo() *int64 {
	if o == nil {
		return nil
	}
	return o.To
}
