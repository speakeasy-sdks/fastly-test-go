// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"time"
)

type TLSCertificateResponseAttributes struct {
	// Date and time in ISO 8601 format.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Date and time in ISO 8601 format.
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	// The hostname for which a certificate was issued.
	IssuedTo *string `json:"issued_to,omitempty"`
	// The certificate authority that issued the certificate.
	Issuer *string `json:"issuer,omitempty"`
	// Time-stamp (GMT) when the certificate will expire. Must be in the future to be used to terminate TLS traffic.
	NotAfter *time.Time `json:"not_after,omitempty"`
	// Time-stamp (GMT) when the certificate will become valid. Must be in the past to be used to terminate TLS traffic.
	NotBefore *time.Time `json:"not_before,omitempty"`
	// A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.
	Replace *bool `json:"replace,omitempty"`
	// A value assigned by the issuer that is unique to a certificate.
	SerialNumber *string `json:"serial_number,omitempty"`
	// The algorithm used to sign the certificate.
	SignatureAlgorithm *string `json:"signature_algorithm,omitempty"`
	// Date and time in ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (t TLSCertificateResponseAttributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TLSCertificateResponseAttributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TLSCertificateResponseAttributes) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *TLSCertificateResponseAttributes) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *TLSCertificateResponseAttributes) GetIssuedTo() *string {
	if o == nil {
		return nil
	}
	return o.IssuedTo
}

func (o *TLSCertificateResponseAttributes) GetIssuer() *string {
	if o == nil {
		return nil
	}
	return o.Issuer
}

func (o *TLSCertificateResponseAttributes) GetNotAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.NotAfter
}

func (o *TLSCertificateResponseAttributes) GetNotBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.NotBefore
}

func (o *TLSCertificateResponseAttributes) GetReplace() *bool {
	if o == nil {
		return nil
	}
	return o.Replace
}

func (o *TLSCertificateResponseAttributes) GetSerialNumber() *string {
	if o == nil {
		return nil
	}
	return o.SerialNumber
}

func (o *TLSCertificateResponseAttributes) GetSignatureAlgorithm() *string {
	if o == nil {
		return nil
	}
	return o.SignatureAlgorithm
}

func (o *TLSCertificateResponseAttributes) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
