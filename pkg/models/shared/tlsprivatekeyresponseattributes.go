// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"time"
)

type TLSPrivateKeyResponseAttributes struct {
	// Date and time in ISO 8601 format.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Date and time in ISO 8601 format.
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	// The key length used to generate the private key.
	KeyLength *int64 `json:"key_length,omitempty"`
	// The algorithm used to generate the private key. Must be `RSA`.
	KeyType *string `json:"key_type,omitempty"`
	// A customizable name for your private key.
	Name *string `json:"name,omitempty"`
	// Useful for safely identifying the key.
	PublicKeySha1 *string `json:"public_key_sha1,omitempty"`
	// A recommendation from Fastly to replace this private key and all associated certificates.
	Replace *bool `json:"replace,omitempty"`
	// Date and time in ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (t TLSPrivateKeyResponseAttributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TLSPrivateKeyResponseAttributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TLSPrivateKeyResponseAttributes) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *TLSPrivateKeyResponseAttributes) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *TLSPrivateKeyResponseAttributes) GetKeyLength() *int64 {
	if o == nil {
		return nil
	}
	return o.KeyLength
}

func (o *TLSPrivateKeyResponseAttributes) GetKeyType() *string {
	if o == nil {
		return nil
	}
	return o.KeyType
}

func (o *TLSPrivateKeyResponseAttributes) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TLSPrivateKeyResponseAttributes) GetPublicKeySha1() *string {
	if o == nil {
		return nil
	}
	return o.PublicKeySha1
}

func (o *TLSPrivateKeyResponseAttributes) GetReplace() *bool {
	if o == nil {
		return nil
	}
	return o.Replace
}

func (o *TLSPrivateKeyResponseAttributes) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
