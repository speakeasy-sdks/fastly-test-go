// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TypeResource - Resource type
type TypeResource string

const (
	TypeResourceObjectStore TypeResource = "object-store"
	TypeResourceSecretStore TypeResource = "secret-store"
	TypeResourceConfigStore TypeResource = "config-store"
)

func (e TypeResource) ToPointer() *TypeResource {
	return &e
}

func (e *TypeResource) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object-store":
		fallthrough
	case "secret-store":
		fallthrough
	case "config-store":
		*e = TypeResource(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TypeResource: %v", v)
	}
}
