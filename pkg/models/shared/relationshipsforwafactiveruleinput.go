// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"errors"
)

type RelationshipsForWafActiveRuleInputType string

const (
	RelationshipsForWafActiveRuleInputTypeRelationshipWafFirewallVersionInput RelationshipsForWafActiveRuleInputType = "relationship_waf_firewall_versionInput"
	RelationshipsForWafActiveRuleInputTypeRelationshipWafRuleRevisionInput    RelationshipsForWafActiveRuleInputType = "relationship_waf_rule_revisionInput"
)

type RelationshipsForWafActiveRuleInput struct {
	RelationshipWafFirewallVersionInput *RelationshipWafFirewallVersionInput
	RelationshipWafRuleRevisionInput    *RelationshipWafRuleRevisionInput

	Type RelationshipsForWafActiveRuleInputType
}

func CreateRelationshipsForWafActiveRuleInputRelationshipWafFirewallVersionInput(relationshipWafFirewallVersionInput RelationshipWafFirewallVersionInput) RelationshipsForWafActiveRuleInput {
	typ := RelationshipsForWafActiveRuleInputTypeRelationshipWafFirewallVersionInput

	return RelationshipsForWafActiveRuleInput{
		RelationshipWafFirewallVersionInput: &relationshipWafFirewallVersionInput,
		Type:                                typ,
	}
}

func CreateRelationshipsForWafActiveRuleInputRelationshipWafRuleRevisionInput(relationshipWafRuleRevisionInput RelationshipWafRuleRevisionInput) RelationshipsForWafActiveRuleInput {
	typ := RelationshipsForWafActiveRuleInputTypeRelationshipWafRuleRevisionInput

	return RelationshipsForWafActiveRuleInput{
		RelationshipWafRuleRevisionInput: &relationshipWafRuleRevisionInput,
		Type:                             typ,
	}
}

func (u *RelationshipsForWafActiveRuleInput) UnmarshalJSON(data []byte) error {

	relationshipWafFirewallVersionInput := new(RelationshipWafFirewallVersionInput)
	if err := utils.UnmarshalJSON(data, &relationshipWafFirewallVersionInput, "", true, true); err == nil {
		u.RelationshipWafFirewallVersionInput = relationshipWafFirewallVersionInput
		u.Type = RelationshipsForWafActiveRuleInputTypeRelationshipWafFirewallVersionInput
		return nil
	}

	relationshipWafRuleRevisionInput := new(RelationshipWafRuleRevisionInput)
	if err := utils.UnmarshalJSON(data, &relationshipWafRuleRevisionInput, "", true, true); err == nil {
		u.RelationshipWafRuleRevisionInput = relationshipWafRuleRevisionInput
		u.Type = RelationshipsForWafActiveRuleInputTypeRelationshipWafRuleRevisionInput
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u RelationshipsForWafActiveRuleInput) MarshalJSON() ([]byte, error) {
	if u.RelationshipWafFirewallVersionInput != nil {
		return utils.MarshalJSON(u.RelationshipWafFirewallVersionInput, "", true)
	}

	if u.RelationshipWafRuleRevisionInput != nil {
		return utils.MarshalJSON(u.RelationshipWafRuleRevisionInput, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
