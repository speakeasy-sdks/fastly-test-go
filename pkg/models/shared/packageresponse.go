// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// PackageResponse - OK
type PackageResponse struct {
	// Date and time in ISO 8601 format.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Date and time in ISO 8601 format.
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	// Alphanumeric string identifying the package.
	ID *string `json:"id,omitempty"`
	// [Package metadata](#metadata-model) that has been extracted from the uploaded package.
	//
	Metadata  *PackageMetadata `json:"metadata,omitempty"`
	ServiceID *string          `json:"service_id,omitempty"`
	// Date and time in ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	Version   *int64     `json:"version,omitempty"`
}

func (o *PackageResponse) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *PackageResponse) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *PackageResponse) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PackageResponse) GetMetadata() *PackageMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *PackageResponse) GetServiceID() *string {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

func (o *PackageResponse) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *PackageResponse) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}
