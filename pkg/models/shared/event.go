// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// EventAttributesEventType - Type of event. Can be used with `filter[event_type]`
type EventAttributesEventType string

const (
	EventAttributesEventTypeAPIKeyCreate                  EventAttributesEventType = "api_key.create"
	EventAttributesEventTypeACLCreate                     EventAttributesEventType = "acl.create"
	EventAttributesEventTypeACLDelete                     EventAttributesEventType = "acl.delete"
	EventAttributesEventTypeACLUpdate                     EventAttributesEventType = "acl.update"
	EventAttributesEventTypeAddressCreate                 EventAttributesEventType = "address.create"
	EventAttributesEventTypeAddressDelete                 EventAttributesEventType = "address.delete"
	EventAttributesEventTypeAddressUpdate                 EventAttributesEventType = "address.update"
	EventAttributesEventTypeBackendCreate                 EventAttributesEventType = "backend.create"
	EventAttributesEventTypeBackendDelete                 EventAttributesEventType = "backend.delete"
	EventAttributesEventTypeBackendUpdate                 EventAttributesEventType = "backend.update"
	EventAttributesEventTypeBillingContactUpdate          EventAttributesEventType = "billing.contact_update"
	EventAttributesEventTypeCacheSettingsCreate           EventAttributesEventType = "cache_settings.create"
	EventAttributesEventTypeCacheSettingsDelete           EventAttributesEventType = "cache_settings.delete"
	EventAttributesEventTypeCacheSettingsUpdate           EventAttributesEventType = "cache_settings.update"
	EventAttributesEventTypeCustomerCreate                EventAttributesEventType = "customer.create"
	EventAttributesEventTypeCustomerPricing               EventAttributesEventType = "customer.pricing"
	EventAttributesEventTypeCustomerUpdate                EventAttributesEventType = "customer.update"
	EventAttributesEventTypeCustomerFeatureCreate         EventAttributesEventType = "customer_feature.create"
	EventAttributesEventTypeCustomerFeatureDelete         EventAttributesEventType = "customer_feature.delete"
	EventAttributesEventTypeDirectorCreate                EventAttributesEventType = "director.create"
	EventAttributesEventTypeDirectorDelete                EventAttributesEventType = "director.delete"
	EventAttributesEventTypeDirectorUpdate                EventAttributesEventType = "director.update"
	EventAttributesEventTypeDirectorBackendCreate         EventAttributesEventType = "director_backend.create"
	EventAttributesEventTypeDirectorBackendDelete         EventAttributesEventType = "director_backend.delete"
	EventAttributesEventTypeDomainCreate                  EventAttributesEventType = "domain.create"
	EventAttributesEventTypeDomainDelete                  EventAttributesEventType = "domain.delete"
	EventAttributesEventTypeDomainUpdate                  EventAttributesEventType = "domain.update"
	EventAttributesEventTypeGzipCreate                    EventAttributesEventType = "gzip.create"
	EventAttributesEventTypeGzipDelete                    EventAttributesEventType = "gzip.delete"
	EventAttributesEventTypeGzipUpdate                    EventAttributesEventType = "gzip.update"
	EventAttributesEventTypeHeaderCreate                  EventAttributesEventType = "header.create"
	EventAttributesEventTypeHeaderDelete                  EventAttributesEventType = "header.delete"
	EventAttributesEventTypeHeaderUpdate                  EventAttributesEventType = "header.update"
	EventAttributesEventTypeHealthcheckCreate             EventAttributesEventType = "healthcheck.create"
	EventAttributesEventTypeHealthcheckDelete             EventAttributesEventType = "healthcheck.delete"
	EventAttributesEventTypeHealthcheckUpdate             EventAttributesEventType = "healthcheck.update"
	EventAttributesEventTypeInvitationAccept              EventAttributesEventType = "invitation.accept"
	EventAttributesEventTypeInvitationSent                EventAttributesEventType = "invitation.sent"
	EventAttributesEventTypeInvoiceFailedPayment          EventAttributesEventType = "invoice.failed_payment"
	EventAttributesEventTypeInvoicePayment                EventAttributesEventType = "invoice.payment"
	EventAttributesEventTypeIoSettingsCreate              EventAttributesEventType = "io_settings.create"
	EventAttributesEventTypeIoSettingsDelete              EventAttributesEventType = "io_settings.delete"
	EventAttributesEventTypeIoSettingsUpdate              EventAttributesEventType = "io_settings.update"
	EventAttributesEventTypeLoggingCreate                 EventAttributesEventType = "logging.create"
	EventAttributesEventTypeLoggingDelete                 EventAttributesEventType = "logging.delete"
	EventAttributesEventTypeLoggingUpdate                 EventAttributesEventType = "logging.update"
	EventAttributesEventTypePoolCreate                    EventAttributesEventType = "pool.create"
	EventAttributesEventTypePoolDelete                    EventAttributesEventType = "pool.delete"
	EventAttributesEventTypePoolUpdate                    EventAttributesEventType = "pool.update"
	EventAttributesEventTypeRequestSettingsCreate         EventAttributesEventType = "request_settings.create"
	EventAttributesEventTypeRequestSettingsDelete         EventAttributesEventType = "request_settings.delete"
	EventAttributesEventTypeRequestSettingsUpdate         EventAttributesEventType = "request_settings.update"
	EventAttributesEventTypeResponseObjectCreate          EventAttributesEventType = "response_object.create"
	EventAttributesEventTypeResponseObjectDelete          EventAttributesEventType = "response_object.delete"
	EventAttributesEventTypeResponseObjectUpdate          EventAttributesEventType = "response_object.update"
	EventAttributesEventTypeRuleStatusUpdate              EventAttributesEventType = "rule_status.update"
	EventAttributesEventTypeRuleStatusUpsert              EventAttributesEventType = "rule_status.upsert"
	EventAttributesEventTypeServerCreate                  EventAttributesEventType = "server.create"
	EventAttributesEventTypeServerDelete                  EventAttributesEventType = "server.delete"
	EventAttributesEventTypeServerUpdate                  EventAttributesEventType = "server.update"
	EventAttributesEventTypeServiceCreate                 EventAttributesEventType = "service.create"
	EventAttributesEventTypeServiceDelete                 EventAttributesEventType = "service.delete"
	EventAttributesEventTypeServiceMove                   EventAttributesEventType = "service.move"
	EventAttributesEventTypeServiceMoveDestination        EventAttributesEventType = "service.move_destination"
	EventAttributesEventTypeServiceMoveSource             EventAttributesEventType = "service.move_source"
	EventAttributesEventTypeServicePurgeAll               EventAttributesEventType = "service.purge_all"
	EventAttributesEventTypeServiceUpdate                 EventAttributesEventType = "service.update"
	EventAttributesEventTypeServiceAuthorizationCreate    EventAttributesEventType = "service_authorization.create"
	EventAttributesEventTypeServiceAuthorizationDelete    EventAttributesEventType = "service_authorization.delete"
	EventAttributesEventTypeServiceAuthorizationUpdate    EventAttributesEventType = "service_authorization.update"
	EventAttributesEventTypeTLSBulkCertificateCreate      EventAttributesEventType = "tls.bulk_certificate.create"
	EventAttributesEventTypeTLSBulkCertificateDelete      EventAttributesEventType = "tls.bulk_certificate.delete"
	EventAttributesEventTypeTLSBulkCertificateUpdate      EventAttributesEventType = "tls.bulk_certificate.update"
	EventAttributesEventTypeTLSCertificateCreate          EventAttributesEventType = "tls.certificate.create"
	EventAttributesEventTypeTLSCertificateExpirationEmail EventAttributesEventType = "tls.certificate.expiration_email"
	EventAttributesEventTypeTLSCertificateUpdate          EventAttributesEventType = "tls.certificate.update"
	EventAttributesEventTypeTLSCertificateDelete          EventAttributesEventType = "tls.certificate.delete"
	EventAttributesEventTypeTLSConfigurationUpdate        EventAttributesEventType = "tls.configuration.update"
	EventAttributesEventTypeTLSPrivateKeyCreate           EventAttributesEventType = "tls.private_key.create"
	EventAttributesEventTypeTLSPrivateKeyDelete           EventAttributesEventType = "tls.private_key.delete"
	EventAttributesEventTypeTLSActivationEnable           EventAttributesEventType = "tls.activation.enable"
	EventAttributesEventTypeTLSActivationUpdate           EventAttributesEventType = "tls.activation.update"
	EventAttributesEventTypeTLSActivationDisable          EventAttributesEventType = "tls.activation.disable"
	EventAttributesEventTypeTLSGlobalsignDomainCreate     EventAttributesEventType = "tls.globalsign.domain.create"
	EventAttributesEventTypeTLSGlobalsignDomainVerify     EventAttributesEventType = "tls.globalsign.domain.verify"
	EventAttributesEventTypeTLSGlobalsignDomainDelete     EventAttributesEventType = "tls.globalsign.domain.delete"
	EventAttributesEventTypeTLSSubscriptionCreate         EventAttributesEventType = "tls.subscription.create"
	EventAttributesEventTypeTLSSubscriptionDelete         EventAttributesEventType = "tls.subscription.delete"
	EventAttributesEventTypeTLSSubscriptionDNSCheckEmail  EventAttributesEventType = "tls.subscription.dns_check_email"
	EventAttributesEventTypeTokenCreate                   EventAttributesEventType = "token.create"
	EventAttributesEventTypeTokenDestroy                  EventAttributesEventType = "token.destroy"
	EventAttributesEventTypeTwoFactorAuthDisable          EventAttributesEventType = "two_factor_auth.disable"
	EventAttributesEventTypeTwoFactorAuthEnable           EventAttributesEventType = "two_factor_auth.enable"
	EventAttributesEventTypeUserCreate                    EventAttributesEventType = "user.create"
	EventAttributesEventTypeUserDestroy                   EventAttributesEventType = "user.destroy"
	EventAttributesEventTypeUserLock                      EventAttributesEventType = "user.lock"
	EventAttributesEventTypeUserLogin                     EventAttributesEventType = "user.login"
	EventAttributesEventTypeUserLoginFailure              EventAttributesEventType = "user.login_failure"
	EventAttributesEventTypeUserLogout                    EventAttributesEventType = "user.logout"
	EventAttributesEventTypeUserPasswordUpdate            EventAttributesEventType = "user.password_update"
	EventAttributesEventTypeUserUnlock                    EventAttributesEventType = "user.unlock"
	EventAttributesEventTypeUserUpdate                    EventAttributesEventType = "user.update"
	EventAttributesEventTypeVclCreate                     EventAttributesEventType = "vcl.create"
	EventAttributesEventTypeVclDelete                     EventAttributesEventType = "vcl.delete"
	EventAttributesEventTypeVclUpdate                     EventAttributesEventType = "vcl.update"
	EventAttributesEventTypeVersionActivate               EventAttributesEventType = "version.activate"
	EventAttributesEventTypeVersionClone                  EventAttributesEventType = "version.clone"
	EventAttributesEventTypeVersionCopy                   EventAttributesEventType = "version.copy"
	EventAttributesEventTypeVersionCopyDestination        EventAttributesEventType = "version.copy_destination"
	EventAttributesEventTypeVersionCopySource             EventAttributesEventType = "version.copy_source"
	EventAttributesEventTypeVersionCreate                 EventAttributesEventType = "version.create"
	EventAttributesEventTypeVersionDeactivate             EventAttributesEventType = "version.deactivate"
	EventAttributesEventTypeVersionLock                   EventAttributesEventType = "version.lock"
	EventAttributesEventTypeVersionUpdate                 EventAttributesEventType = "version.update"
	EventAttributesEventTypeWafConfigurationSetUpdate     EventAttributesEventType = "waf.configuration_set_update"
	EventAttributesEventTypeWafCreate                     EventAttributesEventType = "waf.create"
	EventAttributesEventTypeWafDelete                     EventAttributesEventType = "waf.delete"
	EventAttributesEventTypeWafUpdate                     EventAttributesEventType = "waf.update"
	EventAttributesEventTypeWafEnable                     EventAttributesEventType = "waf.enable"
	EventAttributesEventTypeWafDisable                    EventAttributesEventType = "waf.disable"
	EventAttributesEventTypeWafOwaspCreate                EventAttributesEventType = "waf.owasp.create"
	EventAttributesEventTypeWafOwaspUpdate                EventAttributesEventType = "waf.owasp.update"
	EventAttributesEventTypeWafRulesetDeploy              EventAttributesEventType = "waf.ruleset.deploy"
	EventAttributesEventTypeWafRulesetDeployFailure       EventAttributesEventType = "waf.ruleset.deploy_failure"
	EventAttributesEventTypeWordpressCreate               EventAttributesEventType = "wordpress.create"
	EventAttributesEventTypeWordpressDelete               EventAttributesEventType = "wordpress.delete"
	EventAttributesEventTypeWordpressUpdate               EventAttributesEventType = "wordpress.update"
)

func (e EventAttributesEventType) ToPointer() *EventAttributesEventType {
	return &e
}

func (e *EventAttributesEventType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_key.create":
		fallthrough
	case "acl.create":
		fallthrough
	case "acl.delete":
		fallthrough
	case "acl.update":
		fallthrough
	case "address.create":
		fallthrough
	case "address.delete":
		fallthrough
	case "address.update":
		fallthrough
	case "backend.create":
		fallthrough
	case "backend.delete":
		fallthrough
	case "backend.update":
		fallthrough
	case "billing.contact_update":
		fallthrough
	case "cache_settings.create":
		fallthrough
	case "cache_settings.delete":
		fallthrough
	case "cache_settings.update":
		fallthrough
	case "customer.create":
		fallthrough
	case "customer.pricing":
		fallthrough
	case "customer.update":
		fallthrough
	case "customer_feature.create":
		fallthrough
	case "customer_feature.delete":
		fallthrough
	case "director.create":
		fallthrough
	case "director.delete":
		fallthrough
	case "director.update":
		fallthrough
	case "director_backend.create":
		fallthrough
	case "director_backend.delete":
		fallthrough
	case "domain.create":
		fallthrough
	case "domain.delete":
		fallthrough
	case "domain.update":
		fallthrough
	case "gzip.create":
		fallthrough
	case "gzip.delete":
		fallthrough
	case "gzip.update":
		fallthrough
	case "header.create":
		fallthrough
	case "header.delete":
		fallthrough
	case "header.update":
		fallthrough
	case "healthcheck.create":
		fallthrough
	case "healthcheck.delete":
		fallthrough
	case "healthcheck.update":
		fallthrough
	case "invitation.accept":
		fallthrough
	case "invitation.sent":
		fallthrough
	case "invoice.failed_payment":
		fallthrough
	case "invoice.payment":
		fallthrough
	case "io_settings.create":
		fallthrough
	case "io_settings.delete":
		fallthrough
	case "io_settings.update":
		fallthrough
	case "logging.create":
		fallthrough
	case "logging.delete":
		fallthrough
	case "logging.update":
		fallthrough
	case "pool.create":
		fallthrough
	case "pool.delete":
		fallthrough
	case "pool.update":
		fallthrough
	case "request_settings.create":
		fallthrough
	case "request_settings.delete":
		fallthrough
	case "request_settings.update":
		fallthrough
	case "response_object.create":
		fallthrough
	case "response_object.delete":
		fallthrough
	case "response_object.update":
		fallthrough
	case "rule_status.update":
		fallthrough
	case "rule_status.upsert":
		fallthrough
	case "server.create":
		fallthrough
	case "server.delete":
		fallthrough
	case "server.update":
		fallthrough
	case "service.create":
		fallthrough
	case "service.delete":
		fallthrough
	case "service.move":
		fallthrough
	case "service.move_destination":
		fallthrough
	case "service.move_source":
		fallthrough
	case "service.purge_all":
		fallthrough
	case "service.update":
		fallthrough
	case "service_authorization.create":
		fallthrough
	case "service_authorization.delete":
		fallthrough
	case "service_authorization.update":
		fallthrough
	case "tls.bulk_certificate.create":
		fallthrough
	case "tls.bulk_certificate.delete":
		fallthrough
	case "tls.bulk_certificate.update":
		fallthrough
	case "tls.certificate.create":
		fallthrough
	case "tls.certificate.expiration_email":
		fallthrough
	case "tls.certificate.update":
		fallthrough
	case "tls.certificate.delete":
		fallthrough
	case "tls.configuration.update":
		fallthrough
	case "tls.private_key.create":
		fallthrough
	case "tls.private_key.delete":
		fallthrough
	case "tls.activation.enable":
		fallthrough
	case "tls.activation.update":
		fallthrough
	case "tls.activation.disable":
		fallthrough
	case "tls.globalsign.domain.create":
		fallthrough
	case "tls.globalsign.domain.verify":
		fallthrough
	case "tls.globalsign.domain.delete":
		fallthrough
	case "tls.subscription.create":
		fallthrough
	case "tls.subscription.delete":
		fallthrough
	case "tls.subscription.dns_check_email":
		fallthrough
	case "token.create":
		fallthrough
	case "token.destroy":
		fallthrough
	case "two_factor_auth.disable":
		fallthrough
	case "two_factor_auth.enable":
		fallthrough
	case "user.create":
		fallthrough
	case "user.destroy":
		fallthrough
	case "user.lock":
		fallthrough
	case "user.login":
		fallthrough
	case "user.login_failure":
		fallthrough
	case "user.logout":
		fallthrough
	case "user.password_update":
		fallthrough
	case "user.unlock":
		fallthrough
	case "user.update":
		fallthrough
	case "vcl.create":
		fallthrough
	case "vcl.delete":
		fallthrough
	case "vcl.update":
		fallthrough
	case "version.activate":
		fallthrough
	case "version.clone":
		fallthrough
	case "version.copy":
		fallthrough
	case "version.copy_destination":
		fallthrough
	case "version.copy_source":
		fallthrough
	case "version.create":
		fallthrough
	case "version.deactivate":
		fallthrough
	case "version.lock":
		fallthrough
	case "version.update":
		fallthrough
	case "waf.configuration_set_update":
		fallthrough
	case "waf.create":
		fallthrough
	case "waf.delete":
		fallthrough
	case "waf.update":
		fallthrough
	case "waf.enable":
		fallthrough
	case "waf.disable":
		fallthrough
	case "waf.owasp.create":
		fallthrough
	case "waf.owasp.update":
		fallthrough
	case "waf.ruleset.deploy":
		fallthrough
	case "waf.ruleset.deploy_failure":
		fallthrough
	case "wordpress.create":
		fallthrough
	case "wordpress.delete":
		fallthrough
	case "wordpress.update":
		*e = EventAttributesEventType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventAttributesEventType: %v", v)
	}
}

// EventAttributesMetadata - Hash of key value pairs of additional information.
type EventAttributesMetadata struct {
}

type EventAttributes struct {
	// Indicates if event was performed by Fastly.
	Admin *bool `json:"admin,omitempty"`
	// Date and time in ISO 8601 format.
	CreatedAt  *time.Time `json:"created_at,omitempty"`
	CustomerID *string    `json:"customer_id,omitempty"`
	// Description of the event.
	Description *string `json:"description,omitempty"`
	// Type of event. Can be used with `filter[event_type]`
	EventType *EventAttributesEventType `json:"event_type,omitempty"`
	// IP addresses that the event was requested from.
	IP *string `json:"ip,omitempty"`
	// Hash of key value pairs of additional information.
	Metadata  *EventAttributesMetadata `json:"metadata,omitempty"`
	ServiceID *string                  `json:"service_id,omitempty"`
	TokenID   *string                  `json:"token_id,omitempty"`
	UserID    *string                  `json:"user_id,omitempty"`
}

func (o *EventAttributes) GetAdmin() *bool {
	if o == nil {
		return nil
	}
	return o.Admin
}

func (o *EventAttributes) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *EventAttributes) GetCustomerID() *string {
	if o == nil {
		return nil
	}
	return o.CustomerID
}

func (o *EventAttributes) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *EventAttributes) GetEventType() *EventAttributesEventType {
	if o == nil {
		return nil
	}
	return o.EventType
}

func (o *EventAttributes) GetIP() *string {
	if o == nil {
		return nil
	}
	return o.IP
}

func (o *EventAttributes) GetMetadata() *EventAttributesMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *EventAttributes) GetServiceID() *string {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

func (o *EventAttributes) GetTokenID() *string {
	if o == nil {
		return nil
	}
	return o.TokenID
}

func (o *EventAttributes) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

type Event struct {
	Attributes *EventAttributes `json:"attributes,omitempty"`
	ID         *string          `json:"id,omitempty"`
	// Resource type
	Type *TypeEvent `json:"type,omitempty"`
}

func (o *Event) GetAttributes() *EventAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}

func (o *Event) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Event) GetType() *TypeEvent {
	if o == nil {
		return nil
	}
	return o.Type
}
