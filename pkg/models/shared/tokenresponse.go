// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// TokenResponseScope - Space-delimited list of authorization scope.
type TokenResponseScope string

const (
	TokenResponseScopeGlobal      TokenResponseScope = "global"
	TokenResponseScopePurgeSelect TokenResponseScope = "purge_select"
	TokenResponseScopePurgeAll    TokenResponseScope = "purge_all"
	TokenResponseScopeGlobalRead  TokenResponseScope = "global:read"
)

func (e TokenResponseScope) ToPointer() *TokenResponseScope {
	return &e
}

func (e *TokenResponseScope) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "global":
		fallthrough
	case "purge_select":
		fallthrough
	case "purge_all":
		fallthrough
	case "global:read":
		*e = TokenResponseScope(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TokenResponseScope: %v", v)
	}
}

// TokenResponse - OK
type TokenResponse struct {
	// Time-stamp (UTC) of when the token was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// Date and time in ISO 8601 format.
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	// Time-stamp (UTC) of when the token will expire (optional).
	ExpiresAt *string `json:"expires_at,omitempty"`
	ID        *string `json:"id,omitempty"`
	// IP Address of the client that last used the token.
	IP *string `json:"ip,omitempty"`
	// Time-stamp (UTC) of when the token was last used.
	LastUsedAt *string `json:"last_used_at,omitempty"`
	// Name of the token.
	Name *string `json:"name,omitempty"`
	// Space-delimited list of authorization scope.
	Scope *TokenResponseScope `json:"scope,omitempty"`
	// List of alphanumeric strings identifying services (optional). If no services are specified, the token will have access to all services on the account.
	//
	Services []string `json:"services,omitempty"`
	// Date and time in ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// User-Agent header of the client that last used the token.
	UserAgent *string `json:"user_agent,omitempty"`
	UserID    *string `json:"user_id,omitempty"`
}
