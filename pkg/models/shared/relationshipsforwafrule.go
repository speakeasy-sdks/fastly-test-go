// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"errors"
)

type RelationshipsForWafRuleType string

const (
	RelationshipsForWafRuleTypeRelationshipWafTags          RelationshipsForWafRuleType = "relationship_waf_tags"
	RelationshipsForWafRuleTypeRelationshipWafRuleRevisions RelationshipsForWafRuleType = "relationship_waf_rule_revisions"
)

type RelationshipsForWafRule struct {
	RelationshipWafTags          *RelationshipWafTags
	RelationshipWafRuleRevisions *RelationshipWafRuleRevisions

	Type RelationshipsForWafRuleType
}

func CreateRelationshipsForWafRuleRelationshipWafTags(relationshipWafTags RelationshipWafTags) RelationshipsForWafRule {
	typ := RelationshipsForWafRuleTypeRelationshipWafTags

	return RelationshipsForWafRule{
		RelationshipWafTags: &relationshipWafTags,
		Type:                typ,
	}
}

func CreateRelationshipsForWafRuleRelationshipWafRuleRevisions(relationshipWafRuleRevisions RelationshipWafRuleRevisions) RelationshipsForWafRule {
	typ := RelationshipsForWafRuleTypeRelationshipWafRuleRevisions

	return RelationshipsForWafRule{
		RelationshipWafRuleRevisions: &relationshipWafRuleRevisions,
		Type:                         typ,
	}
}

func (u *RelationshipsForWafRule) UnmarshalJSON(data []byte) error {

	relationshipWafTags := RelationshipWafTags{}
	if err := utils.UnmarshalJSON(data, &relationshipWafTags, "", true, true); err == nil {
		u.RelationshipWafTags = &relationshipWafTags
		u.Type = RelationshipsForWafRuleTypeRelationshipWafTags
		return nil
	}

	relationshipWafRuleRevisions := RelationshipWafRuleRevisions{}
	if err := utils.UnmarshalJSON(data, &relationshipWafRuleRevisions, "", true, true); err == nil {
		u.RelationshipWafRuleRevisions = &relationshipWafRuleRevisions
		u.Type = RelationshipsForWafRuleTypeRelationshipWafRuleRevisions
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u RelationshipsForWafRule) MarshalJSON() ([]byte, error) {
	if u.RelationshipWafTags != nil {
		return utils.MarshalJSON(u.RelationshipWafTags, "", true)
	}

	if u.RelationshipWafRuleRevisions != nil {
		return utils.MarshalJSON(u.RelationshipWafRuleRevisions, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
