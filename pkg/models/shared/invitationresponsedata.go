// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/types"
	"Fastly/pkg/utils"
)

type InvitationResponseData struct {
	Attributes    *Timestamps                 `json:"attributes,omitempty"`
	ID            *string                     `json:"id,omitempty"`
	Relationships *RelationshipsForInvitation `json:"relationships,omitempty"`
	// Resource type
	type_ *string `const:"invitation" json:"type"`
}

func (i InvitationResponseData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *InvitationResponseData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *InvitationResponseData) GetAttributes() *Timestamps {
	if o == nil {
		return nil
	}
	return o.Attributes
}

func (o *InvitationResponseData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *InvitationResponseData) GetRelationships() *RelationshipsForInvitation {
	if o == nil {
		return nil
	}
	return o.Relationships
}

func (o *InvitationResponseData) GetType() *string {
	return types.String("invitation")
}
