// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InvitationDataAttributesStatusCode - Indicates whether or not the invitation is active.
type InvitationDataAttributesStatusCode int64

const (
	InvitationDataAttributesStatusCodeZero InvitationDataAttributesStatusCode = 0
	InvitationDataAttributesStatusCodeOne  InvitationDataAttributesStatusCode = 1
)

func (e InvitationDataAttributesStatusCode) ToPointer() *InvitationDataAttributesStatusCode {
	return &e
}

func (e *InvitationDataAttributesStatusCode) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		*e = InvitationDataAttributesStatusCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvitationDataAttributesStatusCode: %v", v)
	}
}

type InvitationDataAttributes struct {
	// The email address of the invitee.
	Email *string `json:"email,omitempty"`
	// Indicates the user has limited access to the customer's services.
	LimitServices *bool `json:"limit_services,omitempty"`
	// The permissions role assigned to the user. Can be `user`, `billing`, `engineer`, or `superuser`.
	Role *RoleUser `json:"role,omitempty"`
	// Indicates whether or not the invitation is active.
	StatusCode *InvitationDataAttributesStatusCode `json:"status_code,omitempty"`
}

type InvitationDataInput struct {
	Attributes    *InvitationDataAttributes                  `json:"attributes,omitempty"`
	Relationships *RelationshipServiceInvitationsCreateInput `json:"relationships,omitempty"`
	// Resource type
	Type *TypeInvitation `json:"type,omitempty"`
}
