// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"errors"
)

type WafActiveRuleCreationResponseType string

const (
	WafActiveRuleCreationResponseTypeWafActiveRuleResponse  WafActiveRuleCreationResponseType = "waf_active_rule_response"
	WafActiveRuleCreationResponseTypeWafActiveRulesResponse WafActiveRuleCreationResponseType = "waf_active_rules_response"
)

type WafActiveRuleCreationResponse struct {
	WafActiveRuleResponse  *WafActiveRuleResponse
	WafActiveRulesResponse *WafActiveRulesResponse

	Type WafActiveRuleCreationResponseType
}

func CreateWafActiveRuleCreationResponseWafActiveRuleResponse(wafActiveRuleResponse WafActiveRuleResponse) WafActiveRuleCreationResponse {
	typ := WafActiveRuleCreationResponseTypeWafActiveRuleResponse

	return WafActiveRuleCreationResponse{
		WafActiveRuleResponse: &wafActiveRuleResponse,
		Type:                  typ,
	}
}

func CreateWafActiveRuleCreationResponseWafActiveRulesResponse(wafActiveRulesResponse WafActiveRulesResponse) WafActiveRuleCreationResponse {
	typ := WafActiveRuleCreationResponseTypeWafActiveRulesResponse

	return WafActiveRuleCreationResponse{
		WafActiveRulesResponse: &wafActiveRulesResponse,
		Type:                   typ,
	}
}

func (u *WafActiveRuleCreationResponse) UnmarshalJSON(data []byte) error {

	wafActiveRuleResponse := new(WafActiveRuleResponse)
	if err := utils.UnmarshalJSON(data, &wafActiveRuleResponse, "", true, true); err == nil {
		u.WafActiveRuleResponse = wafActiveRuleResponse
		u.Type = WafActiveRuleCreationResponseTypeWafActiveRuleResponse
		return nil
	}

	wafActiveRulesResponse := new(WafActiveRulesResponse)
	if err := utils.UnmarshalJSON(data, &wafActiveRulesResponse, "", true, true); err == nil {
		u.WafActiveRulesResponse = wafActiveRulesResponse
		u.Type = WafActiveRuleCreationResponseTypeWafActiveRulesResponse
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u WafActiveRuleCreationResponse) MarshalJSON() ([]byte, error) {
	if u.WafActiveRuleResponse != nil {
		return utils.MarshalJSON(u.WafActiveRuleResponse, "", true)
	}

	if u.WafActiveRulesResponse != nil {
		return utils.MarshalJSON(u.WafActiveRulesResponse, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
