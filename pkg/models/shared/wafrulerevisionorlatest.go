// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"errors"
)

type WafRuleRevisionOrLatestType string

const (
	WafRuleRevisionOrLatestTypeInteger WafRuleRevisionOrLatestType = "integer"
	WafRuleRevisionOrLatestTypeStr     WafRuleRevisionOrLatestType = "str"
)

type WafRuleRevisionOrLatest struct {
	Integer *int64
	Str     *string

	Type WafRuleRevisionOrLatestType
}

func CreateWafRuleRevisionOrLatestInteger(integer int64) WafRuleRevisionOrLatest {
	typ := WafRuleRevisionOrLatestTypeInteger

	return WafRuleRevisionOrLatest{
		Integer: &integer,
		Type:    typ,
	}
}

func CreateWafRuleRevisionOrLatestStr(str string) WafRuleRevisionOrLatest {
	typ := WafRuleRevisionOrLatestTypeStr

	return WafRuleRevisionOrLatest{
		Str:  &str,
		Type: typ,
	}
}

func (u *WafRuleRevisionOrLatest) UnmarshalJSON(data []byte) error {

	integer := new(int64)
	if err := utils.UnmarshalJSON(data, &integer, "", true, true); err == nil {
		u.Integer = integer
		u.Type = WafRuleRevisionOrLatestTypeInteger
		return nil
	}

	str := new(string)
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = str
		u.Type = WafRuleRevisionOrLatestTypeStr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u WafRuleRevisionOrLatest) MarshalJSON() ([]byte, error) {
	if u.Integer != nil {
		return utils.MarshalJSON(u.Integer, "", true)
	}

	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
