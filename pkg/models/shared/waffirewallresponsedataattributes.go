// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"time"
)

type WafFirewallResponseDataAttributes struct {
	// The number of active Fastly rules set to block on the active or latest firewall version.
	ActiveRulesFastlyBlockCount *int64 `json:"active_rules_fastly_block_count,omitempty"`
	// The number of active Fastly rules set to log on the active or latest firewall version.
	ActiveRulesFastlyLogCount *int64 `json:"active_rules_fastly_log_count,omitempty"`
	// The number of active Fastly rules set to score on the active or latest firewall version.
	ActiveRulesFastlyScoreCount *int64 `json:"active_rules_fastly_score_count,omitempty"`
	// The number of active OWASP rules set to block on the active or latest firewall version.
	ActiveRulesOwaspBlockCount *int64 `json:"active_rules_owasp_block_count,omitempty"`
	// The number of active OWASP rules set to log on the active or latest firewall version.
	ActiveRulesOwaspLogCount *int64 `json:"active_rules_owasp_log_count,omitempty"`
	// The number of active OWASP rules set to score on the active or latest firewall version.
	ActiveRulesOwaspScoreCount *int64 `json:"active_rules_owasp_score_count,omitempty"`
	// The number of active Trustwave rules set to block on the active or latest firewall version.
	ActiveRulesTrustwaveBlockCount *int64 `json:"active_rules_trustwave_block_count,omitempty"`
	// The number of active Trustwave rules set to log on the active or latest firewall version.
	ActiveRulesTrustwaveLogCount *int64 `json:"active_rules_trustwave_log_count,omitempty"`
	// Date and time in ISO 8601 format.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Date and time in ISO 8601 format.
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	ServiceID *string    `json:"service_id,omitempty"`
	// Date and time in ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (w WafFirewallResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WafFirewallResponseDataAttributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WafFirewallResponseDataAttributes) GetActiveRulesFastlyBlockCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ActiveRulesFastlyBlockCount
}

func (o *WafFirewallResponseDataAttributes) GetActiveRulesFastlyLogCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ActiveRulesFastlyLogCount
}

func (o *WafFirewallResponseDataAttributes) GetActiveRulesFastlyScoreCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ActiveRulesFastlyScoreCount
}

func (o *WafFirewallResponseDataAttributes) GetActiveRulesOwaspBlockCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ActiveRulesOwaspBlockCount
}

func (o *WafFirewallResponseDataAttributes) GetActiveRulesOwaspLogCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ActiveRulesOwaspLogCount
}

func (o *WafFirewallResponseDataAttributes) GetActiveRulesOwaspScoreCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ActiveRulesOwaspScoreCount
}

func (o *WafFirewallResponseDataAttributes) GetActiveRulesTrustwaveBlockCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ActiveRulesTrustwaveBlockCount
}

func (o *WafFirewallResponseDataAttributes) GetActiveRulesTrustwaveLogCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ActiveRulesTrustwaveLogCount
}

func (o *WafFirewallResponseDataAttributes) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *WafFirewallResponseDataAttributes) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *WafFirewallResponseDataAttributes) GetServiceID() *string {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

func (o *WafFirewallResponseDataAttributes) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
