// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TypeUser - Resource type
type TypeUser string

const (
	TypeUserUser TypeUser = "user"
)

func (e TypeUser) ToPointer() *TypeUser {
	return &e
}

func (e *TypeUser) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user":
		*e = TypeUser(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TypeUser: %v", v)
	}
}
