// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"errors"
)

// DomainCheckItem1 - Domain details.
type DomainCheckItem1 struct {
	// A freeform descriptive note.
	Comment *string `json:"comment,omitempty"`
	// The name of the domain or domains associated with this service.
	Name *string `json:"name,omitempty"`
}

func (o *DomainCheckItem1) GetComment() *string {
	if o == nil {
		return nil
	}
	return o.Comment
}

func (o *DomainCheckItem1) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type DomainCheckItemType string

const (
	DomainCheckItemTypeDomainCheckItem1 DomainCheckItemType = "domain_check_item_1"
	DomainCheckItemTypeStr              DomainCheckItemType = "str"
	DomainCheckItemTypeBoolean          DomainCheckItemType = "boolean"
)

type DomainCheckItem struct {
	DomainCheckItem1 *DomainCheckItem1
	Str              *string
	Boolean          *bool

	Type DomainCheckItemType
}

func CreateDomainCheckItemDomainCheckItem1(domainCheckItem1 DomainCheckItem1) DomainCheckItem {
	typ := DomainCheckItemTypeDomainCheckItem1

	return DomainCheckItem{
		DomainCheckItem1: &domainCheckItem1,
		Type:             typ,
	}
}

func CreateDomainCheckItemStr(str string) DomainCheckItem {
	typ := DomainCheckItemTypeStr

	return DomainCheckItem{
		Str:  &str,
		Type: typ,
	}
}

func CreateDomainCheckItemBoolean(boolean bool) DomainCheckItem {
	typ := DomainCheckItemTypeBoolean

	return DomainCheckItem{
		Boolean: &boolean,
		Type:    typ,
	}
}

func (u *DomainCheckItem) UnmarshalJSON(data []byte) error {

	domainCheckItem1 := new(DomainCheckItem1)
	if err := utils.UnmarshalJSON(data, &domainCheckItem1, "", true, true); err == nil {
		u.DomainCheckItem1 = domainCheckItem1
		u.Type = DomainCheckItemTypeDomainCheckItem1
		return nil
	}

	str := new(string)
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = str
		u.Type = DomainCheckItemTypeStr
		return nil
	}

	boolean := new(bool)
	if err := utils.UnmarshalJSON(data, &boolean, "", true, true); err == nil {
		u.Boolean = boolean
		u.Type = DomainCheckItemTypeBoolean
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u DomainCheckItem) MarshalJSON() ([]byte, error) {
	if u.DomainCheckItem1 != nil {
		return utils.MarshalJSON(u.DomainCheckItem1, "", true)
	}

	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
