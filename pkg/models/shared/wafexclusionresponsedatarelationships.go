// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"errors"
)

type WafExclusionResponseDataRelationshipsType string

const (
	WafExclusionResponseDataRelationshipsTypeRelationshipWafRules         WafExclusionResponseDataRelationshipsType = "relationship_waf_rules"
	WafExclusionResponseDataRelationshipsTypeRelationshipWafRuleRevisions WafExclusionResponseDataRelationshipsType = "relationship_waf_rule_revisions"
)

type WafExclusionResponseDataRelationships struct {
	RelationshipWafRules         *RelationshipWafRules
	RelationshipWafRuleRevisions *RelationshipWafRuleRevisions

	Type WafExclusionResponseDataRelationshipsType
}

func CreateWafExclusionResponseDataRelationshipsRelationshipWafRules(relationshipWafRules RelationshipWafRules) WafExclusionResponseDataRelationships {
	typ := WafExclusionResponseDataRelationshipsTypeRelationshipWafRules

	return WafExclusionResponseDataRelationships{
		RelationshipWafRules: &relationshipWafRules,
		Type:                 typ,
	}
}

func CreateWafExclusionResponseDataRelationshipsRelationshipWafRuleRevisions(relationshipWafRuleRevisions RelationshipWafRuleRevisions) WafExclusionResponseDataRelationships {
	typ := WafExclusionResponseDataRelationshipsTypeRelationshipWafRuleRevisions

	return WafExclusionResponseDataRelationships{
		RelationshipWafRuleRevisions: &relationshipWafRuleRevisions,
		Type:                         typ,
	}
}

func (u *WafExclusionResponseDataRelationships) UnmarshalJSON(data []byte) error {

	relationshipWafRules := RelationshipWafRules{}
	if err := utils.UnmarshalJSON(data, &relationshipWafRules, "", true, true); err == nil {
		u.RelationshipWafRules = &relationshipWafRules
		u.Type = WafExclusionResponseDataRelationshipsTypeRelationshipWafRules
		return nil
	}

	relationshipWafRuleRevisions := RelationshipWafRuleRevisions{}
	if err := utils.UnmarshalJSON(data, &relationshipWafRuleRevisions, "", true, true); err == nil {
		u.RelationshipWafRuleRevisions = &relationshipWafRuleRevisions
		u.Type = WafExclusionResponseDataRelationshipsTypeRelationshipWafRuleRevisions
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u WafExclusionResponseDataRelationships) MarshalJSON() ([]byte, error) {
	if u.RelationshipWafRules != nil {
		return utils.MarshalJSON(u.RelationshipWafRules, "", true)
	}

	if u.RelationshipWafRuleRevisions != nil {
		return utils.MarshalJSON(u.RelationshipWafRuleRevisions, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
