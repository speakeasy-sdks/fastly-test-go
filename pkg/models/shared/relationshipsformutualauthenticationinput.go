// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Fastly/pkg/utils"
	"errors"
)

type RelationshipsForMutualAuthenticationInputType string

const (
	RelationshipsForMutualAuthenticationInputTypeRelationshipTLSActivationsInput RelationshipsForMutualAuthenticationInputType = "relationship_tls_activationsInput"
)

type RelationshipsForMutualAuthenticationInput struct {
	RelationshipTLSActivationsInput *RelationshipTLSActivationsInput

	Type RelationshipsForMutualAuthenticationInputType
}

func CreateRelationshipsForMutualAuthenticationInputRelationshipTLSActivationsInput(relationshipTLSActivationsInput RelationshipTLSActivationsInput) RelationshipsForMutualAuthenticationInput {
	typ := RelationshipsForMutualAuthenticationInputTypeRelationshipTLSActivationsInput

	return RelationshipsForMutualAuthenticationInput{
		RelationshipTLSActivationsInput: &relationshipTLSActivationsInput,
		Type:                            typ,
	}
}

func (u *RelationshipsForMutualAuthenticationInput) UnmarshalJSON(data []byte) error {

	relationshipTLSActivationsInput := new(RelationshipTLSActivationsInput)
	if err := utils.UnmarshalJSON(data, &relationshipTLSActivationsInput, "", true, true); err == nil {
		u.RelationshipTLSActivationsInput = relationshipTLSActivationsInput
		u.Type = RelationshipsForMutualAuthenticationInputTypeRelationshipTLSActivationsInput
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u RelationshipsForMutualAuthenticationInput) MarshalJSON() ([]byte, error) {
	if u.RelationshipTLSActivationsInput != nil {
		return utils.MarshalJSON(u.RelationshipTLSActivationsInput, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
