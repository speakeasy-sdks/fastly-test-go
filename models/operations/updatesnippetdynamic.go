// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/fastly-test-go/models/components"
	"net/http"
)

type UpdateSnippetDynamicRequest struct {
	// Alphanumeric string identifying the service.
	ServiceID string              `pathParam:"style=simple,explode=false,name=service_id"`
	Snippet   *components.Snippet `request:"mediaType=application/x-www-form-urlencoded"`
	// Alphanumeric string identifying a VCL Snippet.
	SnippetID string `pathParam:"style=simple,explode=false,name=snippet_id"`
}

func (o *UpdateSnippetDynamicRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *UpdateSnippetDynamicRequest) GetSnippet() *components.Snippet {
	if o == nil {
		return nil
	}
	return o.Snippet
}

func (o *UpdateSnippetDynamicRequest) GetSnippetID() string {
	if o == nil {
		return ""
	}
	return o.SnippetID
}

type UpdateSnippetDynamicResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	SnippetResponse *components.SnippetResponse
}

func (o *UpdateSnippetDynamicResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateSnippetDynamicResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateSnippetDynamicResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateSnippetDynamicResponse) GetSnippetResponse() *components.SnippetResponse {
	if o == nil {
		return nil
	}
	return o.SnippetResponse
}
