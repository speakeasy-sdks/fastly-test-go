// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/fastly-test-go/internal/utils"
	"github.com/speakeasy-sdks/fastly-test-go/models/components"
	"net/http"
)

type ListWafRulesRequest struct {
	// Limit the returned rules to a specific ModSecurity rule ID.
	FilterModsecRuleID *string `queryParam:"style=form,explode=true,name=filter[modsec_rule_id]"`
	// Limit the returned rules to a set not included in the active firewall version for a firewall.
	FilterWafFirewallIDNotMatch *string `queryParam:"style=form,explode=true,name=filter[waf_firewall.id][not][match]"`
	// Limit the returned rules to a set linked to a source.
	FilterWafRuleRevisionsSource *string `queryParam:"style=form,explode=true,name=filter[waf_rule_revisions][source]"`
	// Limit the returned rules to a set linked to a tag by name.
	FilterWafTagsName *string `queryParam:"style=form,explode=true,name=filter[waf_tags][name]"`
	// Include relationships. Optional, comma-separated values. Permitted values: `waf_tags` and `waf_rule_revisions`.
	//
	Include *string `queryParam:"style=form,explode=true,name=include"`
	// Current page.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Number of records per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page[size]"`
}

func (l ListWafRulesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListWafRulesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListWafRulesRequest) GetFilterModsecRuleID() *string {
	if o == nil {
		return nil
	}
	return o.FilterModsecRuleID
}

func (o *ListWafRulesRequest) GetFilterWafFirewallIDNotMatch() *string {
	if o == nil {
		return nil
	}
	return o.FilterWafFirewallIDNotMatch
}

func (o *ListWafRulesRequest) GetFilterWafRuleRevisionsSource() *string {
	if o == nil {
		return nil
	}
	return o.FilterWafRuleRevisionsSource
}

func (o *ListWafRulesRequest) GetFilterWafTagsName() *string {
	if o == nil {
		return nil
	}
	return o.FilterWafTagsName
}

func (o *ListWafRulesRequest) GetInclude() *string {
	if o == nil {
		return nil
	}
	return o.Include
}

func (o *ListWafRulesRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *ListWafRulesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type ListWafRulesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	WafRulesResponse *components.WafRulesResponse
}

func (o *ListWafRulesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListWafRulesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListWafRulesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListWafRulesResponse) GetWafRulesResponse() *components.WafRulesResponse {
	if o == nil {
		return nil
	}
	return o.WafRulesResponse
}
