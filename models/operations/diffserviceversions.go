// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Fastly/internal/utils"
	"Fastly/models/components"
	"net/http"
)

type DiffServiceVersionsRequest struct {
	// Optional method to format the diff field.
	Format *components.QueryFormat `default:"text" queryParam:"style=form,explode=true,name=format"`
	// The version number of the service to which changes in the generated VCL are being compared. Can either be a positive number from 1 to your maximum version or a negative number from -1 down (-1 is latest version etc).
	FromVersionID int64 `pathParam:"style=simple,explode=false,name=from_version_id"`
	// Alphanumeric string identifying the service.
	ServiceID string `pathParam:"style=simple,explode=false,name=service_id"`
	// The version number of the service from which changes in the generated VCL are being compared. Uses same numbering scheme as `from`.
	ToVersionID int64 `pathParam:"style=simple,explode=false,name=to_version_id"`
}

func (d DiffServiceVersionsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DiffServiceVersionsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DiffServiceVersionsRequest) GetFormat() *components.QueryFormat {
	if o == nil {
		return nil
	}
	return o.Format
}

func (o *DiffServiceVersionsRequest) GetFromVersionID() int64 {
	if o == nil {
		return 0
	}
	return o.FromVersionID
}

func (o *DiffServiceVersionsRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *DiffServiceVersionsRequest) GetToVersionID() int64 {
	if o == nil {
		return 0
	}
	return o.ToVersionID
}

type DiffServiceVersionsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	DiffResponse *components.DiffResponse
}

func (o *DiffServiceVersionsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DiffServiceVersionsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DiffServiceVersionsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DiffServiceVersionsResponse) GetDiffResponse() *components.DiffResponse {
	if o == nil {
		return nil
	}
	return o.DiffResponse
}
