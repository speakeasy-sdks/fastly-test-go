// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Fastly/internal/utils"
	"Fastly/models/components"
	"net/http"
)

type ListServicesRequest struct {
	// Direction in which to sort results.
	Direction *components.Direction `default:"ascend" queryParam:"style=form,explode=true,name=direction"`
	// Current page.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of records per page.
	PerPage *int64 `default:"20" queryParam:"style=form,explode=true,name=per_page"`
	// Field on which to sort.
	Sort *string `default:"created" queryParam:"style=form,explode=true,name=sort"`
}

func (l ListServicesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListServicesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListServicesRequest) GetDirection() *components.Direction {
	if o == nil {
		return nil
	}
	return o.Direction
}

func (o *ListServicesRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListServicesRequest) GetPerPage() *int64 {
	if o == nil {
		return nil
	}
	return o.PerPage
}

func (o *ListServicesRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

type ListServicesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Classes []components.ServiceListResponse
}

func (o *ListServicesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListServicesResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *ListServicesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListServicesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListServicesResponse) GetClasses() []components.ServiceListResponse {
	if o == nil {
		return nil
	}
	return o.Classes
}
