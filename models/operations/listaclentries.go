// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/fastly-test-go/v2/internal/utils"
	"github.com/speakeasy-sdks/fastly-test-go/v2/models/components"
	"net/http"
)

type ListACLEntriesRequest struct {
	// Alphanumeric string identifying a ACL.
	ACLID string `pathParam:"style=simple,explode=false,name=acl_id"`
	// Direction in which to sort results.
	Direction *components.Direction `default:"ascend" queryParam:"style=form,explode=true,name=direction"`
	// Current page.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of records per page.
	PerPage *int64 `default:"20" queryParam:"style=form,explode=true,name=per_page"`
	// Alphanumeric string identifying the service.
	ServiceID string `pathParam:"style=simple,explode=false,name=service_id"`
	// Field on which to sort.
	Sort *string `default:"created" queryParam:"style=form,explode=true,name=sort"`
}

func (l ListACLEntriesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListACLEntriesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListACLEntriesRequest) GetACLID() string {
	if o == nil {
		return ""
	}
	return o.ACLID
}

func (o *ListACLEntriesRequest) GetDirection() *components.Direction {
	if o == nil {
		return nil
	}
	return o.Direction
}

func (o *ListACLEntriesRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListACLEntriesRequest) GetPerPage() *int64 {
	if o == nil {
		return nil
	}
	return o.PerPage
}

func (o *ListACLEntriesRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *ListACLEntriesRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

type ListACLEntriesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Classes []components.ACLEntryResponse
}

func (o *ListACLEntriesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListACLEntriesResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}

func (o *ListACLEntriesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListACLEntriesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListACLEntriesResponse) GetClasses() []components.ACLEntryResponse {
	if o == nil {
		return nil
	}
	return o.Classes
}
