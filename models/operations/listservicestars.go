// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/fastly-test-go/internal/utils"
	"github.com/speakeasy-sdks/fastly-test-go/models/components"
	"net/http"
)

type ListServiceStarsData struct {
	Relationships *components.RelationshipsForStar `json:"relationships,omitempty"`
	// Resource type
	Type *components.TypeStar `default:"star" json:"type"`
}

func (l ListServiceStarsData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListServiceStarsData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListServiceStarsData) GetRelationships() *components.RelationshipsForStar {
	if o == nil {
		return nil
	}
	return o.Relationships
}

func (o *ListServiceStarsData) GetType() *components.TypeStar {
	if o == nil {
		return nil
	}
	return o.Type
}

type Data struct {
	Attributes *components.Timestamps `json:"attributes,omitempty"`
	Data       *ListServiceStarsData  `json:"data,omitempty"`
	ID         *string                `json:"id,omitempty"`
}

func (o *Data) GetAttributes() *components.Timestamps {
	if o == nil {
		return nil
	}
	return o.Attributes
}

func (o *Data) GetData() *ListServiceStarsData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *Data) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

type Links struct {
	// The first page of data.
	First *string `json:"first,omitempty"`
	// The last page of data.
	Last *string `json:"last,omitempty"`
	// The next page of data.
	Next *string `json:"next,omitempty"`
	// The previous page of data.
	Prev *string `json:"prev,omitempty"`
}

func (o *Links) GetFirst() *string {
	if o == nil {
		return nil
	}
	return o.First
}

func (o *Links) GetLast() *string {
	if o == nil {
		return nil
	}
	return o.Last
}

func (o *Links) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *Links) GetPrev() *string {
	if o == nil {
		return nil
	}
	return o.Prev
}

type ListServiceStarsMeta struct {
	// Current page.
	CurrentPage *int64 `json:"current_page,omitempty"`
	// Number of records per page.
	PerPage *int64 `default:"20" json:"per_page"`
	// Total records in result set.
	RecordCount *int64 `json:"record_count,omitempty"`
	// Total pages in result set.
	TotalPages *int64 `json:"total_pages,omitempty"`
}

func (l ListServiceStarsMeta) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListServiceStarsMeta) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListServiceStarsMeta) GetCurrentPage() *int64 {
	if o == nil {
		return nil
	}
	return o.CurrentPage
}

func (o *ListServiceStarsMeta) GetPerPage() *int64 {
	if o == nil {
		return nil
	}
	return o.PerPage
}

func (o *ListServiceStarsMeta) GetRecordCount() *int64 {
	if o == nil {
		return nil
	}
	return o.RecordCount
}

func (o *ListServiceStarsMeta) GetTotalPages() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalPages
}

// ListServiceStarsResponseBody - OK
type ListServiceStarsResponseBody struct {
	Data  []Data                `json:"data,omitempty"`
	Links *Links                `json:"links,omitempty"`
	Meta  *ListServiceStarsMeta `json:"meta,omitempty"`
}

func (o *ListServiceStarsResponseBody) GetData() []Data {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *ListServiceStarsResponseBody) GetLinks() *Links {
	if o == nil {
		return nil
	}
	return o.Links
}

func (o *ListServiceStarsResponseBody) GetMeta() *ListServiceStarsMeta {
	if o == nil {
		return nil
	}
	return o.Meta
}

type ListServiceStarsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Object *ListServiceStarsResponseBody
}

func (o *ListServiceStarsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListServiceStarsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListServiceStarsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListServiceStarsResponse) GetObject() *ListServiceStarsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
