// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/fastly-test-go/models/components"
	"net/http"
)

type UpdateLogCloudfilesRequest struct {
	LoggingCloudfiles *components.LoggingCloudfiles `request:"mediaType=application/x-www-form-urlencoded"`
	// The name for the real-time logging configuration.
	LoggingCloudfilesName string `pathParam:"style=simple,explode=false,name=logging_cloudfiles_name"`
	// Alphanumeric string identifying the service.
	ServiceID string `pathParam:"style=simple,explode=false,name=service_id"`
	// Integer identifying a service version.
	VersionID int64 `pathParam:"style=simple,explode=false,name=version_id"`
}

func (o *UpdateLogCloudfilesRequest) GetLoggingCloudfiles() *components.LoggingCloudfiles {
	if o == nil {
		return nil
	}
	return o.LoggingCloudfiles
}

func (o *UpdateLogCloudfilesRequest) GetLoggingCloudfilesName() string {
	if o == nil {
		return ""
	}
	return o.LoggingCloudfilesName
}

func (o *UpdateLogCloudfilesRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *UpdateLogCloudfilesRequest) GetVersionID() int64 {
	if o == nil {
		return 0
	}
	return o.VersionID
}

type UpdateLogCloudfilesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	LoggingCloudfilesResponse *components.LoggingCloudfilesResponse
}

func (o *UpdateLogCloudfilesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateLogCloudfilesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateLogCloudfilesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateLogCloudfilesResponse) GetLoggingCloudfilesResponse() *components.LoggingCloudfilesResponse {
	if o == nil {
		return nil
	}
	return o.LoggingCloudfilesResponse
}
