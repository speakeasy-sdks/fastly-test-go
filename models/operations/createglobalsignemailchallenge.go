// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateGlobalsignEmailChallengeRequest struct {
	RequestBody map[string]interface{} `request:"mediaType=application/vnd.api+json"`
	// Alphanumeric string identifying a TLS subscription.
	TLSAuthorizationID string `pathParam:"style=simple,explode=false,name=tls_authorization_id"`
	// Alphanumeric string identifying a TLS subscription.
	TLSSubscriptionID string `pathParam:"style=simple,explode=false,name=tls_subscription_id"`
}

func (o *CreateGlobalsignEmailChallengeRequest) GetRequestBody() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *CreateGlobalsignEmailChallengeRequest) GetTLSAuthorizationID() string {
	if o == nil {
		return ""
	}
	return o.TLSAuthorizationID
}

func (o *CreateGlobalsignEmailChallengeRequest) GetTLSSubscriptionID() string {
	if o == nil {
		return ""
	}
	return o.TLSSubscriptionID
}

// CreateGlobalsignEmailChallengeResponseBody - Created
type CreateGlobalsignEmailChallengeResponseBody struct {
}

type CreateGlobalsignEmailChallengeResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Created
	Object *CreateGlobalsignEmailChallengeResponseBody
}

func (o *CreateGlobalsignEmailChallengeResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateGlobalsignEmailChallengeResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateGlobalsignEmailChallengeResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateGlobalsignEmailChallengeResponse) GetObject() *CreateGlobalsignEmailChallengeResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
