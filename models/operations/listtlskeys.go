// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Fastly/internal/utils"
	"Fastly/models/components"
	"net/http"
)

type ListTLSKeysRequest struct {
	// Limit the returned keys to those without any matching TLS certificates. The only valid value is false.
	FilterInUse *string `queryParam:"style=form,explode=true,name=filter[in_use]"`
	// Current page.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Number of records per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page[size]"`
}

func (l ListTLSKeysRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListTLSKeysRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListTLSKeysRequest) GetFilterInUse() *string {
	if o == nil {
		return nil
	}
	return o.FilterInUse
}

func (o *ListTLSKeysRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *ListTLSKeysRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type ListTLSKeysResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	TLSPrivateKeysResponse *components.TLSPrivateKeysResponse
}

func (o *ListTLSKeysResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListTLSKeysResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListTLSKeysResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListTLSKeysResponse) GetTLSPrivateKeysResponse() *components.TLSPrivateKeysResponse {
	if o == nil {
		return nil
	}
	return o.TLSPrivateKeysResponse
}
