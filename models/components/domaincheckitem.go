// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"errors"
	"github.com/speakeasy-sdks/fastly-test-go/internal/utils"
)

type DomainCheckItemType string

const (
	DomainCheckItemTypeDomain  DomainCheckItemType = "domain"
	DomainCheckItemTypeStr     DomainCheckItemType = "str"
	DomainCheckItemTypeBoolean DomainCheckItemType = "boolean"
)

type DomainCheckItem struct {
	Domain  *Domain
	Str     *string
	Boolean *bool

	Type DomainCheckItemType
}

func CreateDomainCheckItemDomain(domain Domain) DomainCheckItem {
	typ := DomainCheckItemTypeDomain

	return DomainCheckItem{
		Domain: &domain,
		Type:   typ,
	}
}

func CreateDomainCheckItemStr(str string) DomainCheckItem {
	typ := DomainCheckItemTypeStr

	return DomainCheckItem{
		Str:  &str,
		Type: typ,
	}
}

func CreateDomainCheckItemBoolean(boolean bool) DomainCheckItem {
	typ := DomainCheckItemTypeBoolean

	return DomainCheckItem{
		Boolean: &boolean,
		Type:    typ,
	}
}

func (u *DomainCheckItem) UnmarshalJSON(data []byte) error {

	domain := Domain{}
	if err := utils.UnmarshalJSON(data, &domain, "", true, true); err == nil {
		u.Domain = &domain
		u.Type = DomainCheckItemTypeDomain
		return nil
	}

	str := ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = DomainCheckItemTypeStr
		return nil
	}

	boolean := false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, true); err == nil {
		u.Boolean = &boolean
		u.Type = DomainCheckItemTypeBoolean
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u DomainCheckItem) MarshalJSON() ([]byte, error) {
	if u.Domain != nil {
		return utils.MarshalJSON(u.Domain, "", true)
	}

	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
