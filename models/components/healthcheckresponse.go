// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"github.com/speakeasy-sdks/fastly-test-go/internal/utils"
	"time"
)

type HealthcheckResponse struct {
	// How often to run the health check in milliseconds.
	CheckInterval *int64 `json:"check_interval,omitempty"`
	// A freeform descriptive note.
	Comment *string `json:"comment,omitempty"`
	// Date and time in ISO 8601 format.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Date and time in ISO 8601 format.
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	// The status code expected from the host.
	ExpectedResponse *int64 `json:"expected_response,omitempty"`
	// Array of custom headers that will be added to the health check probes.
	Headers []string `json:"headers,omitempty"`
	// Which host to check.
	Host *string `json:"host,omitempty"`
	// Whether to use version 1.0 or 1.1 HTTP.
	HTTPVersion *string `json:"http_version,omitempty"`
	// When loading a config, the initial number of probes to be seen as OK.
	Initial *int64 `json:"initial,omitempty"`
	// Which HTTP method to use.
	Method *string `json:"method,omitempty"`
	// The name of the health check.
	Name *string `json:"name,omitempty"`
	// The path to check.
	Path      *string `json:"path,omitempty"`
	ServiceID *string `json:"service_id,omitempty"`
	// How many health checks must succeed to be considered healthy.
	Threshold *int64 `json:"threshold,omitempty"`
	// Timeout in milliseconds.
	Timeout *int64 `json:"timeout,omitempty"`
	// Date and time in ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	Version   *int64     `json:"version,omitempty"`
	// The number of most recent health check queries to keep for this health check.
	Window *int64 `json:"window,omitempty"`
}

func (h HealthcheckResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *HealthcheckResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *HealthcheckResponse) GetCheckInterval() *int64 {
	if o == nil {
		return nil
	}
	return o.CheckInterval
}

func (o *HealthcheckResponse) GetComment() *string {
	if o == nil {
		return nil
	}
	return o.Comment
}

func (o *HealthcheckResponse) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *HealthcheckResponse) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *HealthcheckResponse) GetExpectedResponse() *int64 {
	if o == nil {
		return nil
	}
	return o.ExpectedResponse
}

func (o *HealthcheckResponse) GetHeaders() []string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *HealthcheckResponse) GetHost() *string {
	if o == nil {
		return nil
	}
	return o.Host
}

func (o *HealthcheckResponse) GetHTTPVersion() *string {
	if o == nil {
		return nil
	}
	return o.HTTPVersion
}

func (o *HealthcheckResponse) GetInitial() *int64 {
	if o == nil {
		return nil
	}
	return o.Initial
}

func (o *HealthcheckResponse) GetMethod() *string {
	if o == nil {
		return nil
	}
	return o.Method
}

func (o *HealthcheckResponse) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *HealthcheckResponse) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *HealthcheckResponse) GetServiceID() *string {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

func (o *HealthcheckResponse) GetThreshold() *int64 {
	if o == nil {
		return nil
	}
	return o.Threshold
}

func (o *HealthcheckResponse) GetTimeout() *int64 {
	if o == nil {
		return nil
	}
	return o.Timeout
}

func (o *HealthcheckResponse) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *HealthcheckResponse) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *HealthcheckResponse) GetWindow() *int64 {
	if o == nil {
		return nil
	}
	return o.Window
}
