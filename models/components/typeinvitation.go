// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// TypeInvitation - Resource type
type TypeInvitation string

const (
	TypeInvitationInvitation TypeInvitation = "invitation"
)

func (e TypeInvitation) ToPointer() *TypeInvitation {
	return &e
}

func (e *TypeInvitation) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invitation":
		*e = TypeInvitation(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TypeInvitation: %v", v)
	}
}
