// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"errors"
	"github.com/speakeasy-sdks/fastly-test-go/v2/internal/utils"
)

type IncludedWithWafFirewallVersionItemType string

const (
	IncludedWithWafFirewallVersionItemTypeSchemasWafFirewallVersion IncludedWithWafFirewallVersionItemType = "schemas_waf_firewall_version"
	IncludedWithWafFirewallVersionItemTypeWafActiveRule             IncludedWithWafFirewallVersionItemType = "waf_active_rule"
)

type IncludedWithWafFirewallVersionItem struct {
	SchemasWafFirewallVersion *SchemasWafFirewallVersion
	WafActiveRule             *WafActiveRule

	Type IncludedWithWafFirewallVersionItemType
}

func CreateIncludedWithWafFirewallVersionItemSchemasWafFirewallVersion(schemasWafFirewallVersion SchemasWafFirewallVersion) IncludedWithWafFirewallVersionItem {
	typ := IncludedWithWafFirewallVersionItemTypeSchemasWafFirewallVersion

	return IncludedWithWafFirewallVersionItem{
		SchemasWafFirewallVersion: &schemasWafFirewallVersion,
		Type:                      typ,
	}
}

func CreateIncludedWithWafFirewallVersionItemWafActiveRule(wafActiveRule WafActiveRule) IncludedWithWafFirewallVersionItem {
	typ := IncludedWithWafFirewallVersionItemTypeWafActiveRule

	return IncludedWithWafFirewallVersionItem{
		WafActiveRule: &wafActiveRule,
		Type:          typ,
	}
}

func (u *IncludedWithWafFirewallVersionItem) UnmarshalJSON(data []byte) error {

	schemasWafFirewallVersion := SchemasWafFirewallVersion{}
	if err := utils.UnmarshalJSON(data, &schemasWafFirewallVersion, "", true, true); err == nil {
		u.SchemasWafFirewallVersion = &schemasWafFirewallVersion
		u.Type = IncludedWithWafFirewallVersionItemTypeSchemasWafFirewallVersion
		return nil
	}

	wafActiveRule := WafActiveRule{}
	if err := utils.UnmarshalJSON(data, &wafActiveRule, "", true, true); err == nil {
		u.WafActiveRule = &wafActiveRule
		u.Type = IncludedWithWafFirewallVersionItemTypeWafActiveRule
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u IncludedWithWafFirewallVersionItem) MarshalJSON() ([]byte, error) {
	if u.SchemasWafFirewallVersion != nil {
		return utils.MarshalJSON(u.SchemasWafFirewallVersion, "", true)
	}

	if u.WafActiveRule != nil {
		return utils.MarshalJSON(u.WafActiveRule, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
