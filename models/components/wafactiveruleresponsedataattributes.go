// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"Fastly/internal/utils"
	"time"
)

type WafActiveRuleResponseDataAttributes struct {
	// Date and time in ISO 8601 format.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Date and time in ISO 8601 format.
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	// The latest rule revision number that is available for the associated rule revision.
	LatestRevision *int64 `json:"latest_revision,omitempty"`
	// Indicates if the associated rule revision is up to date or not.
	Outdated *bool `json:"outdated,omitempty"`
	// Date and time in ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (w WafActiveRuleResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WafActiveRuleResponseDataAttributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WafActiveRuleResponseDataAttributes) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *WafActiveRuleResponseDataAttributes) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *WafActiveRuleResponseDataAttributes) GetLatestRevision() *int64 {
	if o == nil {
		return nil
	}
	return o.LatestRevision
}

func (o *WafActiveRuleResponseDataAttributes) GetOutdated() *bool {
	if o == nil {
		return nil
	}
	return o.Outdated
}

func (o *WafActiveRuleResponseDataAttributes) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
