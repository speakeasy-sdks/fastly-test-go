// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"errors"
	"github.com/speakeasy-sdks/fastly-test-go/internal/utils"
)

type RelationshipsForTLSPrivateKeyType string

const (
	RelationshipsForTLSPrivateKeyTypeRelationshipTLSActivationsInput RelationshipsForTLSPrivateKeyType = "relationship_tls_activations_input"
	RelationshipsForTLSPrivateKeyTypeRelationshipTLSDomainsInput     RelationshipsForTLSPrivateKeyType = "relationship_tls_domains_input"
)

type RelationshipsForTLSPrivateKey struct {
	RelationshipTLSActivationsInput *RelationshipTLSActivationsInput
	RelationshipTLSDomainsInput     *RelationshipTLSDomainsInput

	Type RelationshipsForTLSPrivateKeyType
}

func CreateRelationshipsForTLSPrivateKeyRelationshipTLSActivationsInput(relationshipTLSActivationsInput RelationshipTLSActivationsInput) RelationshipsForTLSPrivateKey {
	typ := RelationshipsForTLSPrivateKeyTypeRelationshipTLSActivationsInput

	return RelationshipsForTLSPrivateKey{
		RelationshipTLSActivationsInput: &relationshipTLSActivationsInput,
		Type:                            typ,
	}
}

func CreateRelationshipsForTLSPrivateKeyRelationshipTLSDomainsInput(relationshipTLSDomainsInput RelationshipTLSDomainsInput) RelationshipsForTLSPrivateKey {
	typ := RelationshipsForTLSPrivateKeyTypeRelationshipTLSDomainsInput

	return RelationshipsForTLSPrivateKey{
		RelationshipTLSDomainsInput: &relationshipTLSDomainsInput,
		Type:                        typ,
	}
}

func (u *RelationshipsForTLSPrivateKey) UnmarshalJSON(data []byte) error {

	relationshipTLSActivationsInput := RelationshipTLSActivationsInput{}
	if err := utils.UnmarshalJSON(data, &relationshipTLSActivationsInput, "", true, true); err == nil {
		u.RelationshipTLSActivationsInput = &relationshipTLSActivationsInput
		u.Type = RelationshipsForTLSPrivateKeyTypeRelationshipTLSActivationsInput
		return nil
	}

	relationshipTLSDomainsInput := RelationshipTLSDomainsInput{}
	if err := utils.UnmarshalJSON(data, &relationshipTLSDomainsInput, "", true, true); err == nil {
		u.RelationshipTLSDomainsInput = &relationshipTLSDomainsInput
		u.Type = RelationshipsForTLSPrivateKeyTypeRelationshipTLSDomainsInput
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u RelationshipsForTLSPrivateKey) MarshalJSON() ([]byte, error) {
	if u.RelationshipTLSActivationsInput != nil {
		return utils.MarshalJSON(u.RelationshipTLSActivationsInput, "", true)
	}

	if u.RelationshipTLSDomainsInput != nil {
		return utils.MarshalJSON(u.RelationshipTLSDomainsInput, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
