// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// TypeEvent - Resource type
type TypeEvent string

const (
	TypeEventEvent TypeEvent = "event"
)

func (e TypeEvent) ToPointer() *TypeEvent {
	return &e
}

func (e *TypeEvent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "event":
		*e = TypeEvent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TypeEvent: %v", v)
	}
}
