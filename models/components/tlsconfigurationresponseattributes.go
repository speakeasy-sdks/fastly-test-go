// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"Fastly/internal/utils"
	"time"
)

type TLSConfigurationResponseAttributes struct {
	// Signifies whether the configuration is used for Platform TLS or not.
	Bulk *bool `json:"bulk,omitempty"`
	// Date and time in ISO 8601 format.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Signifies whether or not Fastly will use this configuration as a default when creating a new [TLS Activation](/reference/api/tls/custom-certs/activations/).
	Default *bool `json:"default,omitempty"`
	// Date and time in ISO 8601 format.
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	// HTTP protocols available on your configuration.
	HTTPProtocols []string `json:"http_protocols,omitempty"`
	// TLS protocols available on your configuration.
	TLSProtocols []float64 `json:"tls_protocols,omitempty"`
	// Date and time in ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (t TLSConfigurationResponseAttributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TLSConfigurationResponseAttributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TLSConfigurationResponseAttributes) GetBulk() *bool {
	if o == nil {
		return nil
	}
	return o.Bulk
}

func (o *TLSConfigurationResponseAttributes) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *TLSConfigurationResponseAttributes) GetDefault() *bool {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *TLSConfigurationResponseAttributes) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *TLSConfigurationResponseAttributes) GetHTTPProtocols() []string {
	if o == nil {
		return nil
	}
	return o.HTTPProtocols
}

func (o *TLSConfigurationResponseAttributes) GetTLSProtocols() []float64 {
	if o == nil {
		return nil
	}
	return o.TLSProtocols
}

func (o *TLSConfigurationResponseAttributes) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
