// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type User struct {
	// Indicates that the user has limited access to the customer's services.
	LimitServices *bool `form:"name=limit_services"`
	// Indicates whether the is account is locked for editing or not.
	Locked *bool `form:"name=locked"`
	// The real life name of the user.
	Name *string `form:"name=name"`
	// Indicates if a new password is required at next login.
	RequireNewPassword *bool `form:"name=require_new_password"`
	// The permissions role assigned to the user. Can be `user`, `billing`, `engineer`, or `superuser`.
	Role *RoleUser `form:"name=role"`
	// Indicates if 2FA is enabled on the user.
	TwoFactorAuthEnabled *bool `form:"name=two_factor_auth_enabled"`
	// Indicates if 2FA is required by the user's customer account.
	TwoFactorSetupRequired *bool `form:"name=two_factor_setup_required"`
}

func (o *User) GetLimitServices() *bool {
	if o == nil {
		return nil
	}
	return o.LimitServices
}

func (o *User) GetLocked() *bool {
	if o == nil {
		return nil
	}
	return o.Locked
}

func (o *User) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *User) GetRequireNewPassword() *bool {
	if o == nil {
		return nil
	}
	return o.RequireNewPassword
}

func (o *User) GetRole() *RoleUser {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *User) GetTwoFactorAuthEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.TwoFactorAuthEnabled
}

func (o *User) GetTwoFactorSetupRequired() *bool {
	if o == nil {
		return nil
	}
	return o.TwoFactorSetupRequired
}
