// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// LoggingMessageType - How the message should be formatted.
type LoggingMessageType string

const (
	LoggingMessageTypeClassic LoggingMessageType = "classic"
	LoggingMessageTypeLoggly  LoggingMessageType = "loggly"
	LoggingMessageTypeLogplex LoggingMessageType = "logplex"
	LoggingMessageTypeBlank   LoggingMessageType = "blank"
)

func (e LoggingMessageType) ToPointer() *LoggingMessageType {
	return &e
}

func (e *LoggingMessageType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "classic":
		fallthrough
	case "loggly":
		fallthrough
	case "logplex":
		fallthrough
	case "blank":
		*e = LoggingMessageType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoggingMessageType: %v", v)
	}
}
