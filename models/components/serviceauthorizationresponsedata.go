// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"github.com/speakeasy-sdks/fastly-test-go/internal/utils"
)

type ServiceAuthorizationResponseDataData struct {
	ID *string `json:"id,omitempty"`
	// Resource type
	Type *TypeUser `default:"user" json:"type"`
}

func (s ServiceAuthorizationResponseDataData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ServiceAuthorizationResponseDataData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ServiceAuthorizationResponseDataData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ServiceAuthorizationResponseDataData) GetType() *TypeUser {
	if o == nil {
		return nil
	}
	return o.Type
}

// ServiceAuthorizationResponseDataUser - The ID of the user being given access to the service.
type ServiceAuthorizationResponseDataUser struct {
	Data *ServiceAuthorizationResponseDataData `json:"data,omitempty"`
}

func (o *ServiceAuthorizationResponseDataUser) GetData() *ServiceAuthorizationResponseDataData {
	if o == nil {
		return nil
	}
	return o.Data
}

type Relationships struct {
	Service *RelationshipMemberService `json:"service,omitempty"`
	// The ID of the user being given access to the service.
	User *ServiceAuthorizationResponseDataUser `json:"user,omitempty"`
}

func (o *Relationships) GetService() *RelationshipMemberService {
	if o == nil {
		return nil
	}
	return o.Service
}

func (o *Relationships) GetUser() *ServiceAuthorizationResponseDataUser {
	if o == nil {
		return nil
	}
	return o.User
}

type ServiceAuthorizationResponseData struct {
	Attributes    *Timestamps    `json:"attributes,omitempty"`
	ID            *string        `json:"id,omitempty"`
	Relationships *Relationships `json:"relationships,omitempty"`
	// Resource type
	Type *TypeServiceAuthorization `default:"service_authorization" json:"type"`
}

func (s ServiceAuthorizationResponseData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ServiceAuthorizationResponseData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ServiceAuthorizationResponseData) GetAttributes() *Timestamps {
	if o == nil {
		return nil
	}
	return o.Attributes
}

func (o *ServiceAuthorizationResponseData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ServiceAuthorizationResponseData) GetRelationships() *Relationships {
	if o == nil {
		return nil
	}
	return o.Relationships
}

func (o *ServiceAuthorizationResponseData) GetType() *TypeServiceAuthorization {
	if o == nil {
		return nil
	}
	return o.Type
}
